<?xml version="1.0" encoding="UTF-8"?>
<window>
	<defaultcontrol always="true">9000</defaultcontrol>
	<allowoverlay>no</allowoverlay>
	<include condition="!Skin.HasSetting(initialsetuprun)">DefaultInitialSetup</include>
	<onload condition="!IsEmpty(Window(home).Property(MenuItemSelected))">ClearProperty(MenuItemSelected,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(MenuItemActive))">ClearProperty(MenuItemActive,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(SubMenuBackground))">ClearProperty(SubMenuBackground,Home)</onload>
	<onload condition="Skin.HasSetting(holidayeffects) + System.Date(1-6,11-23)">Skin.Reset(holidayeffects)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !System.HasAddon(script.randomandlastitems)">Skin.Setbool(disablescriptplaylist)</onload>
	<onload condition="!Skin.HasSetting(disablevideoextras) + !System.HasAddon(script.videoextras)">Skin.Setbool(disablescriptplaylist)</onload>
	<onload condition="!Skin.HasSetting(disabletvtunes) + !System.HasAddon(script.tvtunes)">Skin.Setbool(disabletvtunes)</onload>
	<onload condition="System.HasAddon(script.artistslideshow) + !Skin.HasSetting(disableslideshowart) + IsEmpty(Window.Property(ArtistSlideshowRunning))">RunScript(script.artistslideshow, daemon=True)</onload>
	<onload condition="System.HasAddon(script.favourites)">XBMC.RunScript(script.favourites)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + Library.HasContent(Movies)">XBMC.RunScript(script.randomandlastitems,type=Movie,limit=10,method=Random,playlist=special://skin/extras/Playlists/UnwatchedMovies.xsp,menu=UnWatched)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.1.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.1.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistOne)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.2.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.2.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistTwo)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.3.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.3.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistThree)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.4.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.4.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistFour)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.5.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.5.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistFive)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.6.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.6.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistSix)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.7.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.7.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistSeven)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.8.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.8.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistEight)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.9.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.9.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistNine)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.10.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.10.playlist)],method=$VAR[playlistsortorder],limit=10,unwatched=False,resume=False,property=HomeplaylistTen)</onload>
	<onload condition="Window.Previous(startup) | !Skin.HasSetting(horizontalhomescreen)">Control.Move(9000,$INFO[Skin.String(initialmenuitem)])</onload>
	<controls>
		<include>ArtistExtraFanArt</include>
		<include>CommonBackground</include>
		<include condition="!Skin.HasSetting(hideraindropeffect) | Skin.HasSetting(holidayeffects)">AnimatedBackgroundEffect</include>
		<include>HomeAddonSystem</include>
		<include>HomeWidgetPanel</include>
		<include condition="!Skin.HasSetting(hidehomenowplaying)">NowPlayingPanel</include>
		<control type="group">
			<animation effect="slide" end="-450,0" time="500" tween="quadratic" easing="out">WindowClose</animation>
			<animation effect="slide" start="-450,0" time="500" tween="quadratic" easing="out">WindowOpen</animation>
			<include>HomeVerticalSubBlade</include>
			<include>HomeSubMenuControl</include>
			<include>HomeVerticalBottomBlade</include>
			<include condition="Skin.HasSetting(wraparoundhomemenu)">WrapHomeVertMenu</include>
			<include condition="!Skin.HasSetting(wraparoundhomemenu)">FixedHomeVertMenu</include>
			<include>HomeVerticalMenuBlade</include>
			<visible>!Skin.HasSetting(horizontalhomescreen)</visible>
		</control>
		<include>HomeScreenFloor</include>
		<control type="group">
			<control type="group">
				<top>580</top>
				<animation effect="slide" start="0,0" end="0,30" time="200" tween="quadratic" easing="out" condition="Skin.HasSetting(autovisablesubmenu) | !system.getbool(lookandfeel.enablerssfeeds) + Skin.HasSetting(hidehomestats)">conditional</animation>
				<animation type="WindowOpen" reversible="false">
					<effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
					<effect type="fade" start="0" end="100" time="300" />
				</animation>
				<animation type="WindowClose" reversible="false">
					<effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
					<effect type="fade" start="100" end="0" time="300" />
				</animation>
				<include>HomeSubMenuControl</include>
				<include>HomeHorizontalOverlay</include>
				<include condition="Skin.HasSetting(wraparoundhomemenu)">WrapHomeHorzMenu</include>
				<include condition="!Skin.HasSetting(wraparoundhomemenu)">FixedHomeHorzMenu</include>
				<include>HomeHorizontalSideFade</include>
			</control>
			<visible>Skin.HasSetting(horizontalhomescreen)</visible>
		</control>
		<control type="group">
			<left>0</left>
			<top>33r</top>
			<include>Window_OpenClose_Animation</include>
			<control type="label">
				<left>0</left>
				<top>0</top>
				<height>30</height>
				<width>1260</width>
				<label>$VAR[InfoBarStats]</label>
				<align>right</align>
				<aligny>center</aligny>
				<font>font12</font>
				<textcolor>C0FFFFFF</textcolor>
				<shadowcolor>black</shadowcolor>
				<animation effect="slide" start="0,35" time="300" tween="quadratic" easing="out" condition="[system.getbool(lookandfeel.enablerssfeeds) + !StringCompare(Container(9000).ListItem.Property(LibStats),None) | ControlGroup(9003).HasFocus] | !MusicPlayer.HasNext">conditional</animation>
				<animation effect="slide" end="0,35" time="300" tween="quadratic" easing="out" condition="[system.getbool(lookandfeel.enablerssfeeds) + StringCompare(Container(9000).ListItem.Property(LibStats),None) + !ControlGroup(9003).HasFocus] | [!Skin.HasSetting(hidenextsongsinfo) + MusicPlayer.HasNext]">conditional</animation>
				<visible>!Skin.HasSetting(hidehomestats)</visible>
			</control>
			<control type="rss">
				<description>RSS feed</description>
				<left>-10</left>
				<top>0</top>
				<height>30</height>
				<width>1300</width>
				<font>font12</font>
				<urlset>1</urlset>
				<textcolor>red</textcolor>
				<titlecolor>red</titlecolor>
				<headlinecolor>white</headlinecolor>
				<animation effect="slide" end="0,35" time="300" tween="quadratic" easing="out" condition="[!Skin.HasSetting(hidehomestats) + !StringCompare(Container(9000).ListItem.Property(LibStats),None)] | [!IsEmpty(MusicPlayer.offset(1).Artist) + !Skin.HasSetting(hidenextsongsinfo)] | ControlGroup(9003).HasFocus">conditional</animation>
				<animation effect="slide" start="0,35" time="300" tween="quadratic" easing="out" condition="!Skin.HasSetting(hidehomestats) + StringCompare(Container(9000).ListItem.Property(LibStats),None) + IsEmpty(MusicPlayer.offset(1).Artist) + !Skin.HasSetting(hidenextsongsinfo) + !ControlGroup(9003).HasFocus">conditional</animation>
				<visible>system.getbool(lookandfeel.enablerssfeeds) + [!Player.HasAudio | Skin.HasSetting(hidenextsongsinfo)]</visible>
			</control>
			<control type="fadelabel" id="1">
				<description>Next Five Songs</description>
				<left>0</left>
				<top>0</top>
				<height>30</height>
				<width>1280</width>
				<align>center</align>
				<scroll>true</scroll>
				<scrollout>true</scrollout>
				<scrollspeed>30</scrollspeed>
				<pauseatend>400</pauseatend>
				<label>$VAR[NextFiveSongScroller]</label>
				<font>font12</font>
				<textcolor>white</textcolor>
				<shadowcolor>black</shadowcolor>
				<animation effect="fade" time="200">VisibleChange</animation>
				<visible>MusicPlayer.HasNext + !Skin.HasSetting(hidenextsongsinfo)</visible>
			</control>
			<animation effect="slide" start="0,0" end="0,35" time="100" tween="quadratic" easing="out" condition="ControlGroup(9001).HasFocus + Skin.HasSetting(autovisablesubmenu)">Conditional</animation>
		</control>
	</controls>
</window>