<includes>

	<variable name="NetflixSpotlightWidgetImage">
		<value condition="!IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
    </variable>
	
	<include name="HomeLayoutNetflix">
		
		<!-- background image -->
        <control type="image">
            <include>DimensionsFullscreen</include>
            <texture background="true" fallback="special://skin/extras/backgrounds/global_blue.jpg">$INFO[Container(510).ListItem.Art(fanart)]</texture>
            <aspectratio>scale</aspectratio>
            <fadetime>350</fadetime>
			<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="10,10" time="5000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
        </control>
		<include>DialogOverlay</include>
		
	
		<!-- Kodi Logo image -->
		<control type="image">
			<posx>35</posx>
			<posy>10</posy>
			<height>110</height>
			<aspectratio align="left">keep</aspectratio>
			<colordiffuse>$INFO[Skin.String(HeaderTextColor)]</colordiffuse>
			<texture>home/kodi_logo_light.png</texture>
			<visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + !Control.IsVisible(88888)</visible>
			<visible>!Skin.String(GadgetRows, simplever)</visible>
			<visible>!Skin.HasSetting(ShowProfile) + !Skin.HasSetting(WeatherOnHome)</visible>
			<visible>!Skin.String(CustomLogoImage)</visible>
		</control>
		<!-- custom Logo image -->
		<control type="image">
			<posx>35</posx>
			<posy>10</posy>
			<height>110</height>
			<aspectratio align="left">keep</aspectratio>
			<colordiffuse></colordiffuse>
			<texture>$INFO[Skin.String(CustomLogoImage)]</texture>
			<visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + !Control.IsVisible(88888)</visible>
			<visible>!Skin.String(GadgetRows, simplever)</visible>
			<visible>!Skin.HasSetting(ShowProfile) + !Skin.HasSetting(WeatherOnHome)</visible>
			<visible>Skin.String(CustomLogoImage)</visible>
		</control>
		<!-- Header -->
		<include condition="Skin.HasSetting(WeatherOnHome)">WeatherInfo</include>
		<include>ProfileInfo</include>
		<!--Time-->
		<control type="group">
			<include>TimeInfo</include>
		</control>
		
		<!--NowPlaying-->
		<include condition="Skin.HasTheme(classic)">NowPlayingMusicClassic</include>
		<include condition="Skin.HasTheme(classic)">NowPlayingVideoClassic</include>
		<include condition="!Skin.HasTheme(classic)">NowPlayingModern</include>
		

		<!-- all widgets -->
		<control type="grouplist" id="300">
			<posx>0</posx>
			<top>160</top>
			<width>100%</width>
			<bottom>0</bottom>
			<defaultcontrol always="true">51</defaultcontrol>
			<pagecontrol>317</pagecontrol>
			<!-- ROW1: recommended media -->
			<control type="group">
				<width>1920</width>
				<height>580</height>
				<visible>!IsEmpty(Window(home).Property(widget.recommendedmedia.hascontent))</visible>
				<!-- background panel -->
				<control type="image">
					<posx>50</posx>
					<top>0</top>
					<bottom>0</bottom>
					<width>1820</width>
					<height>575</height>
					<texture border="15">diffuse/bgpanel.png</texture>
					<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
					<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
					<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
					<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
					<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
					<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
					<aspectratio>stretch</aspectratio>
					<visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
				</control>

				<control type="grouplist">
					<width>800</width>
					<posx>60</posx>
					<posy>10</posy>
					<height>450</height>
					<orientation>vertical</orientation>
					<control type="label">
						<height>100</height>
						<font>Bold36</font>
						<align>left</align>
						<aligny>top</aligny>
						<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
						<label>$VAR[HomeMenuWidgetInfoLabel]</label>
					</control>
					<control type="textbox">
						<height max="260">auto</height>
						<label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
						<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
						<align>justify</align>
						<font>Light28</font>
					</control>
					<control type="label">
						<height>25</height>
						<label></label>
					</control>
					<control type="group">
						<height>60</height>
						<include>mediaflags</include>
					</control>
				</control>
				
				<control type="button" id="51">
					<description>Play</description>
					<width>320</width>
					<posx>60</posx>
					<posy>490</posy>
					<label>208</label>
					<onright>52</onright>
					<onleft>9000</onleft>
					<ondown>520</ondown>
					<onclick>PlayMedia($ESCINFO[Container(510).ListItem.FileNameAndPath])</onclick>
				</control>
				<control type="button" id="52">
					<description>Info</description>
					<width>320</width>
					<posx>400</posx>
					<posy>490</posy>
					<label>19033</label>
					<onleft>51</onleft>
					<onright>53</onright>
					<ondown>520</ondown>
					<onclick condition="!System.HasAddon(script.extendedinfo)">ActivateWindow(Videos,plugin://script.extendedinfo)</onclick>
					<onclick condition="IsEmpty(Container(510).ListItem.TvShowTitle)">RunScript(script.extendedinfo,info=extendedinfo,dbid=$INFO[Container(510).ListItem.DBID],name=$INFO[Container(510).ListItem.Title])</onclick>
					<onclick condition="!IsEmpty(Container(510).ListItem.TvShowTitle)">RunScript(script.extendedinfo,info=extendedtvinfo,dbid=$INFO[Container(510).ListItem.DBID],name=$INFO[Container(510).ListItem.TvShowTitle])</onclick>
				</control>
				<control type="button" id="53">
					<label></label>
					<posy>490</posy>
					<posx>740</posx>
					<width>60</width>
					<height>60</height>
					<font>-</font>
					<onright>54</onright>
					<onleft>52</onleft>
					<ondown>520</ondown>
					<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">touchcontrols/icon_back.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]">touchcontrols/icon_back.png</texturenofocus>
					<onclick>Control.Move(510,-1)</onclick>
				</control>
				<control type="button" id="54">
					<label></label>
					<posy>490</posy>
					<posx>800</posx>
					<width>60</width>
					<height>60</height>
					<onleft>53</onleft>
					<ondown>520</ondown>
					<font>-</font>
					<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" flipx="true">touchcontrols/icon_back.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" flipx="true">touchcontrols/icon_back.png</texturenofocus>
					<onclick>Control.Move(510,1)</onclick>
				</control>
				
				<!-- spotlight widget -->
				<control type="panel" id="510">
					<right>60</right>
					<top>10</top>
					<width>960</width>
					<height>555</height>
					<ondown>1508</ondown>
					<orientation>horizontal</orientation>
					<focusposition>2</focusposition>
					<scrolltime tween="cubic" easing="inout">500</scrolltime>
					<itemlayout width="960" height="555">
						<!-- spotlight image -->
						<control type="image">
							<bordersize>5</bordersize>
							<texture background="true" diffuse="diffuse/wide.png">$VAR[NetflixSpotlightWidgetImage]</texture>
							<aspectratio scalediffuse="false">scale</aspectratio>
						</control>
						<!-- clearlogo -->
						<control type="image">
							<right>20</right>
							<bottom>25</bottom>
							<width>70%</width>
							<height>350</height>
							<aspectratio align="right" aligny="bottom">keep</aspectratio>
							<texture background="true">$VAR[SpotLightWidgetInfoclearlogo]</texture>
							<visible>IsEmpty(Listitem.Art(landscape))</visible>
						</control>
					</itemlayout>
					<focusedlayout width="960" height="555">
						<!-- spotlight image -->
						<control type="image">
							<bordersize>5</bordersize>
							<texture background="true" diffuse="diffuse/wide.png">$VAR[NetflixSpotlightWidgetImage]</texture>
							<aspectratio scalediffuse="false">scale</aspectratio>
						</control>
						<!-- clearlogo -->
						<control type="image">
							<right>20</right>
							<bottom>25</bottom>
							<width>70%</width>
							<height>350</height>
							<aspectratio align="right" aligny="bottom">keep</aspectratio>
							<texture background="true">$VAR[SpotLightWidgetInfoclearlogo]</texture>
							<visible>IsEmpty(Listitem.Art(landscape))</visible>
						</control>
					</focusedlayout>
					<content target="video">plugin://script.titanskin.helpers/?RECOMMENDEDMEDIA&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
				</control>
			
			</control>
			
			<!-- whitespace -->
			<control type="group">
				<width>1920</width>
				<height>15</height>
				<visible>!Skin.String(widgetstyle, poster)</visible>
			</control>
			<!-- ROW2: continue watching -->
			<control type="group">
				<width>1920</width>
				<visible>!IsEmpty(Window(home).Property(widget.ondeckmedia.hascontent))</visible>
				<include condition="Skin.String(widgetstyle, poster)">NetflixRowsAltHeigth</include>
				<height>310</height>
				<!-- top bar -->
				<control type="image">
					<posx>50</posx>
					<posy>0</posy>
					<width>1820</width>
					<height>55</height>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				</control>
				<control type="label">
					<height>40</height>
					<posx>60</posx>
					<font>Bold36</font>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<label>31535</label>
				</control>
				
				<control type="panel" id="520">
					<ondown>530</ondown>
					<onleft>9000</onleft>
					<onup>51</onup>
					<include condition="Skin.String(widgetstyle, landscape)">NetflixWidgetLayoutLandscape</include>
					<include condition="Skin.String(widgetstyle, poster)">NetflixWidgetLayoutPoster</include>
					<content target="video">plugin://script.titanskin.helpers/?INPROGRESSMEDIA&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content> 
				</control>
			</control>
			
			<!-- ROW3: recently added -->
			<control type="group">
				<width>1920</width>
				<visible>!IsEmpty(Window(home).Property(widget.recentmedia.hascontent))</visible>
				<include condition="Skin.String(widgetstyle, poster)">NetflixRowsAltHeigth</include>
				<height>310</height>
				
				<!-- top bar -->
				<control type="image">
					<posx>50</posx>
					<posy>0</posy>
					<width>1820</width>
					<height>55</height>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				</control>
				<control type="label">
					<height>40</height>
					<posx>60</posx>
					<font>Bold36</font>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<label>31127</label>
				</control>
				
				<control type="panel" id="530">
					<ondown>540</ondown>
					<onleft>9000</onleft>
					<onup>520</onup>
					<include condition="Skin.String(widgetstyle, landscape)">NetflixWidgetLayoutLandscape</include>
					<include condition="Skin.String(widgetstyle, poster)">NetflixWidgetLayoutPoster</include>
					<content target="video">plugin://script.titanskin.helpers/?RECENTMEDIA&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content> 
				</control>
			</control>
			
			<!-- ROW4: similar movies -->
			<control type="group">
				<width>1920</width>
				<visible>!IsEmpty(Window(home).Property(widget.similarmovies.hascontent))</visible>
				<include condition="Skin.String(widgetstyle, poster)">NetflixRowsAltHeigth</include>
				<height>310</height>
				
				<!-- top bar -->
				<control type="image">
					<posx>50</posx>
					<posy>0</posy>
					<width>1820</width>
					<height>55</height>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				</control>
				<control type="label">
					<height>40</height>
					<posx>60</posx>
					<font>Bold36</font>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<label>$LOCALIZE[31545] $INFO[Container(540).ListItem.Property(originaltitle)]</label>
				</control>
				
				<control type="panel" id="540">
					<!-- the recommended list is also refreshed when the window changes -->
					<ondown>550</ondown>
					<onleft>9000</onleft>
					<onup>530</onup>
					<ondown>550</ondown>
					<include condition="Skin.String(widgetstyle, landscape)">NetflixWidgetLayoutLandscape</include>
					<include condition="Skin.String(widgetstyle, poster)">NetflixWidgetLayoutPoster</include>
					<content target="video">plugin://script.titanskin.helpers/?SIMILARMOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(home).Property(homevisible)]</content> 
				</control>
			</control>
			
			<!-- ROW5: my favorites -->
			<control type="group">
				<width>1920</width>
				<visible>!IsEmpty(Window(home).Property(widget.favouritemedia.hascontent))</visible>
				<include condition="Skin.String(widgetstyle, poster)">NetflixRowsAltHeigth</include>
				<height>310</height>
				
				<!-- top bar -->
				<control type="image">
					<posx>50</posx>
					<posy>0</posy>
					<width>1820</width>
					<height>55</height>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				</control>
				<control type="label">
					<height>40</height>
					<posx>60</posx>
					<font>Bold36</font>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<label>10134</label>
				</control>
				
				<control type="panel" id="550">
					<ondown>550</ondown>
					<onleft>9000</onleft>
					<onup>540</onup>
					<include condition="Skin.String(widgetstyle, landscape)">NetflixWidgetLayoutLandscape</include>
					<include condition="Skin.String(widgetstyle, poster)">NetflixWidgetLayoutPoster</include>
					<content target="video">plugin://script.titanskin.helpers/?FAVOURITEMEDIA&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(home).Property(homevisible)]</content> 
				</control>
			</control>
			
		</control>
		
		<control type="scrollbar" id="317"> 
			<right>15</right>
			<top>160</top>
			<bottom>10</bottom>
			<onleft>17000</onleft>
			<showonepage>false</showonepage>
			<visible>[Skin.HasSetting(EnableTouchSupport) | Skin.HasSetting(alwaysShowScrollbars)]</visible>
		</control>
				
		<!--Sub Menu Tab Left-->
        <control type="group">
			<animation type="Conditional" condition="ControlGroup(9000).HasFocus()">
					<effect type="fade" start="100" end="0" time="100" />
				</animation>
				<animation type="Conditional" condition="!ControlGroup(9000).HasFocus()">
					<effect type="fade" start="0" end="100" time="400" delay="600" />
				</animation>
			<control type="button" id="99001">
				<posx>0</posx>
				<posy>470</posy>
				<width>32</width>
				<height>140</height>
				<align>center</align>
				<aligny>center</aligny>
				<label>[UPPERCASE]$LOCALIZE[33061][/UPPERCASE]</label>
				<textoffsetx>0</textoffsetx>
				<textoffsety>23</textoffsety>
				<angle>90</angle>
				<textwidth>140</textwidth>
				<font>Reg20</font>
				<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
				<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">colors/color_white.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(GeneralPanelsColor)]">colors/color_white.png</texturenofocus>
				<onclick condition="!StringCompare(Window(Home).Property(ShowViewSubMenu),show)">SetProperty(ShowViewSubMenu, show, Home)</onclick>
				<onclick condition="StringCompare(Window(Home).Property(ShowViewSubMenu),show)">ClearProperty(ShowViewSubMenu, Home)</onclick>
				<animation effect="fade" start="100" end="80" time="0" condition="!Control.HasFocus(99001)">Conditional</animation>
			</control>
		</control>
		
		<!--Side Menu-->
        <control type="group" id="9001">
            <posx>-660</posx>
			<posy>0</posy>
			<visible>!Window.IsActive(DialogKeyboard.xml)</visible>
			<include>animation_sub_menu</include>
			<!--Panel-->
				<control type="image">
				<posy>-250</posy>
				<posx>-20</posx>
				<width>515</width>
				<height>1750</height>
				<texture border="5">diffuse/panel.png</texture>
				<animation effect="fade" end="99" time="0" condition="true">Conditional</animation>
				<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				<aspectratio>stretch</aspectratio>
			</control>

			<!-- header -->
			<control type="label">
				<posx>61</posx>
				<posy>10</posy>
				<width min="80" max="1100">auto</width>
				<height>100</height>
				<font>Bold45</font>
				<align>left</align>
				<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
				<label>[UPPERCASE]$LOCALIZE[33061][/UPPERCASE]</label>
				<visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
			</control>
			<control type="image">
				<!--Seperator-->
				<posx>21</posx>
				<posy>160</posy>
				<width>458</width>
				<height>20</height>
				<align>left</align>
				<texture>common/menu-separator.png</texture>
			</control>
			<control type="image">
				<!--Seperator-->
				<posx>21</posx>
				<posy>1080</posy>
				<width>458</width>
				<height>20</height>
				<align>left</align>
				<texture>common/menu-separator.png</texture>
			</control>
			<!-- close dialog -->
			<control type="button">
				<label></label>
				<width>60</width>
				<height>60</height>
				<posx>160</posx>
				<posy>1105</posy>
				<font>-</font>
				<texturefocus colordiffuse="white">touchcontrols/icon_close.png</texturefocus>
				<texturenofocus colordiffuse="bbwhite">touchcontrols/icon_close.png</texturenofocus>
				<onclick>ClearProperty(ShowViewSubMenu, Home)</onclick>
				<visible>StringCompare(Window(Home).Property(ShowViewSubMenu),show)</visible>
			</control>
			<control type="button" id="2">
				<description>powerbutton</description>
				<posx>60</posx>
				<posy>1105</posy>
				<width>60</width>
				<height>60</height>
				<onup>9000</onup>
				<onright>300</onright>
				<onleft>300</onleft>
				<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">common/shutdown2.png</texturefocus>
				<texturenofocus colordiffuse="white">common/shutdown2.png</texturenofocus>
				<onclick>ActivateWindow(111)</onclick>
				<visible>!Skin.HasSetting(DisablePowerMenu)</visible>
				<include>animation_fade_visible_hidden</include>		
			</control>

            <!--main menu 9000-->
			<control type="list" id="9000">
				<posx>21</posx>
				<posy>190</posy>
				<width>458</width>
				<height>850</height>
				<itemgap>0</itemgap>
				<onleft>300</onleft>
				<onright>300</onright>
				<onright>ClearProperty(ShowViewSubMenu, Home)</onright>
				<onleft>ClearProperty(ShowViewSubMenu, Home)</onleft>
				<onback>ClearProperty(ShowViewSubMenu, Home)</onback>
				<onback>300</onback>
				<onup>9000</onup>
				<ondown condition="Skin.HasSetting(DisablePowerMenu)">9000</ondown>
				<ondown condition="!Skin.HasSetting(DisablePowerMenu)">2</ondown>
				<orientation>vertical</orientation>
				<itemlayout height="70" width="370">
					<control type="label">
						<width>458</width>
						<left>50</left>
						<align>left</align>
						<font>Reg26</font>
						<textcolor>$INFO[Skin.String(ButtonTextColor)]</textcolor>
						<shadowcolor>black</shadowcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout height="70" width="370">
					<control type="button">
						<include>SubMenuButton</include>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type="label">
						<width>458</width>
						<left>50</left>
						<align>left</align>
						<font>Reg26</font>
						<textcolor>$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
						<shadowcolor>black</shadowcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
				<content><include>skinshortcuts-mainmenu</include></content>
			</control>
		</control>
	</include>
	
	<include name="NetflixRowsAltHeigth">
		<height>430</height>
	</include>
	
	<include name="NetflixWidgetLayoutPoster">
		<posx>40</posx>
		<posy>70</posy>
		<width>1820</width>
		<height>380</height>
		<orientation>horizontal</orientation>				
		<scrolltime tween="cubic" easing="inout">500</scrolltime>
		<itemlayout height="380" width="261">
		  <control type="image">
			<include>BigPanelPosterDimensions</include>
			<include>PosterThumbBG</include>
		  </control>
		  <control type="image">
			<include>BigPanelPosterDimensions</include>
			<texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumb]</texture>
			<aspectratio scalediffuse="false" aligny="center" align="center">stretch</aspectratio>
			<visible>![IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]]</visible>
		  </control>
		  <control type="image">
			<posx>18</posx>
			<posy>7</posy>
			<width>234</width>
			<height>234</height>
			<texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$INFO[ListItem.Icon]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
			<visible>IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]</visible>
		  </control>
		  <include>NetflixPanelLabelOverlay</include>
		  <control type="group">
			<include>BigPanelPosterDimensions</include>
			<include condition="Skin.HasSetting(CaseOverlays)">PosterOverlay</include>
		  </control>
		  <include>BigPanelWatchedImage</include>
		</itemlayout>
		<focusedlayout height="380" width="261">
		  <control type="image">
			<include>BigPanelPosterDimensions</include>
			<include>PosterThumbFO</include>
		  </control>
		 <control type="image">
			<include>BigPanelPosterDimensions</include>
			<texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumb]</texture>
			<aspectratio scalediffuse="false" aligny="center" align="center">stretch</aspectratio>
			<visible>![IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]]</visible>
		  </control>
		  <control type="image">
			<posx>18</posx>
			<posy>7</posy>
			<width>234</width>
			<height>234</height>
			<texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$INFO[ListItem.Icon]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
			<visible>IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]</visible>
		  </control>
		  <include>NetflixPanelLabelOverlayFocus</include>
		  <control type="group">
			<include>BigPanelPosterDimensions</include>
			<include condition="Skin.HasSetting(CaseOverlays)">PosterOverlay</include>
		  </control>
		  <include>BigPanelWatchedImage</include>	  
		</focusedlayout>
	</include>
	
	<include name="NetflixWidgetLayoutLandscape">
		<posx>60</posx>
		<posy>90</posy>
		<width>1820</width>
		<height>210</height>
		<orientation>horizontal</orientation>				
		<scrolltime tween="cubic" easing="inout">500</scrolltime>
		<itemlayout width="366" height="210">
			<include>ThumbsViewLayout</include>
		</itemlayout>
		<focusedlayout width="366" height="210">
			<control type="group">
				<include>ThumbsViewLayoutFocus</include>
			</control>
		</focusedlayout>
	</include>
	
	<include name="NetflixPanelLabelOverlayFocus">
	
	<control type="group">
		<!-- label overlay when poster cases enabled and itemtype video-->
		<include>BigPanelLabelOverlayVisibility</include>
		<include>BigPanelPosterDimensions</include>
		<visible>Skin.HasSetting(CaseOverlays) + [!IsEmpty(ListItem.Art(poster)) | !IsEmpty(ListItem.Art(tvshow.poster))]</visible>
		<!--Panel-->
		<control type="image">
			<bottom>-1</bottom>
			<width>234</width>
			<height>60</height>
			<texture diffuse="diffuse/poster.png">colors/color_white.png</texture>
			<colordiffuse>$INFO[Skin.String(CaseOverlays.Color)]</colordiffuse>
		</control>
		<control type="label">
		<!--Label focus-->
			<left>10</left>
			<bottom>0</bottom>
			<width>220</width>
			<height>60</height>
			<align>left</align>
			<label>$VAR[HomeMenuWidgetLabel]</label>
			<font>Reg22</font>
			<scroll>true</scroll>
			<textcolor>$INFO[Skin.String(CaseOverlays.TextColor)]</textcolor>
		</control>
	</control>
	<control type="group">
		<!-- label overlay when poster cases disabled  and itemtype video -->
		<include>BigPanelLabelOverlayVisibility</include>
		<include>BigPanelPosterDimensions</include>
		<visible>!Skin.HasSetting(CaseOverlays) + [!IsEmpty(ListItem.Art(poster)) | !IsEmpty(ListItem.Art(tvshow.poster))]</visible>
		<!--Panel-->
		<control type="image">
			<bottom>-1</bottom>
			<width>234</width>
			<height>60</height>
			<texture diffuse="diffuse/poster.png">colors/color_white.png</texture>
			<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
			<animation effect="fade" reversible="false" end="80" time="0" condition="true">Conditional</animation>
		</control>
		<control type="label">
		<!--Label focus-->
			<left>10</left>
			<bottom>0</bottom>
			<width>220</width>
			<height>60</height>
			<align>left</align>
			<label>$VAR[HomeMenuWidgetLabel]</label>
			<font>Reg22</font>
			<scroll>true</scroll>
			<shadowcolor>$INFO[Skin.String(ViewDetailsFocusShadowColor)]</shadowcolor>
			<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
		</control>
	</control>
	
	<control type="group">
		<!-- label overlay when not itemtype video -->
		<include>BigPanelLabelOverlayVisibility</include>
		<include>BigPanelPosterDimensions</include>
		<visible>IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster))</visible>
		<!--Panel-->
		<control type="image">
			<bottom>-1</bottom>
			<width>234</width>
			<height>102</height>
			<texture diffuse="diffuse/poster.png">colors/color_white.png</texture>
			<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
			<animation effect="fade" reversible="false" end="80" time="0" condition="true">Conditional</animation>
		</control>
		<control type="label">
		<!--Label focus-->
			<left>10</left>
			<bottom>0</bottom>
			<width>220</width>
			<height>102</height>
			<align>left</align>
			<label>$VAR[HomeMenuWidgetLabel]</label>
			<font>Reg22</font>
			<scroll>true</scroll>
			<shadowcolor>$INFO[Skin.String(ViewDetailsFocusShadowColor)]</shadowcolor>
			<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
		</control>
	</control>

  </include>
	
	<include name="NetflixPanelLabelOverlay">
	<control type="group">
		<!-- label overlay when poster cases enabled -->
		<include>BigPanelLabelOverlayVisibility</include>
		<include>BigPanelPosterDimensions</include>
		<visible>Skin.HasSetting(CaseOverlays) + [!IsEmpty(ListItem.Art(poster)) | !IsEmpty(ListItem.Art(tvshow.poster))]</visible>
		<!--Panel-->
		<control type="image">
			<bottom>-1</bottom>
			<width>234</width>
			<height>60</height>
			<texture diffuse="diffuse/poster.png">colors/color_white.png</texture>
			<colordiffuse>$INFO[Skin.String(CaseOverlays.Color)]</colordiffuse>
		</control>
		<control type="label">
		<!--Label focus-->
			<left>10</left>
			<bottom>0</bottom>
			<width>220</width>
			<height>60</height>
			<align>left</align>
			<label>$VAR[HomeMenuWidgetLabel]</label>
			<font>Reg22</font>
			<textcolor>$INFO[Skin.String(CaseOverlays.TextColor)]</textcolor>
		</control>
	</control>
	<control type="group">
		<!-- label overlay when poster cases disabled -->
		<include>BigPanelLabelOverlayVisibility</include>
		<include>BigPanelPosterDimensions</include>
		<visible>!Skin.HasSetting(CaseOverlays) + [!IsEmpty(ListItem.Art(poster)) | !IsEmpty(ListItem.Art(tvshow.poster))]</visible>
		<!--Panel-->
		<control type="image">
			<bottom>-1</bottom>
			<width>234</width>
			<height>60</height>
			<texture diffuse="diffuse/poster.png">colors/color_white.png</texture>
			<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
			<animation effect="fade" reversible="false" end="80" time="0" condition="true">Conditional</animation>
		</control>
		<control type="label">
		<!--Label focus-->
			<left>10</left>
			<bottom>0</bottom>
			<width>220</width>
			<height>60</height>
			<align>left</align>
			<label>$VAR[HomeMenuWidgetLabel]</label>
			<font>Reg22</font>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
		</control>
	</control>
	<control type="group">
		<!-- label overlay when poster not present -->
		<include>BigPanelLabelOverlayVisibility</include>
		<include>BigPanelPosterDimensions</include>
		<visible>IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster))</visible>
		<!--Panel-->
		<control type="image">
			<bottom>-1</bottom>
			<width>234</width>
			<height>102</height>
			<texture diffuse="diffuse/poster.png">colors/color_white.png</texture>
			<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
			<animation effect="fade" reversible="false" end="80" time="0" condition="true">Conditional</animation>
		</control>
		<control type="label">
		<!--Label focus-->
			<left>10</left>
			<bottom>0</bottom>
			<width>220</width>
			<height>102</height>
			<align>left</align>
			<label>$VAR[HomeMenuWidgetLabel]</label>
			<font>Reg22</font>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
		</control>
	</control>
  </include>
	
</includes>