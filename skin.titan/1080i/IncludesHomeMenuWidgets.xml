<?xml version="1.0" encoding="utf-8"?>
<includes>

	<variable name="changeWidgetLabel">
        <value condition="!IsEmpty(Container(510).ListItem.Property(similartitle))">$INFO[Container(510).ListItem.Property(similartitle),$LOCALIZE[31545] ]</value>
		<value condition="StringCompare(Control.GetLabel(600),widget-1)">$INFO[Container(300).ListItem.Property(widgetName.1)]</value>
		<value condition="StringCompare(Control.GetLabel(600),widget-2)">$INFO[Container(300).ListItem.Property(widgetName.2)]</value>
		<value condition="StringCompare(Control.GetLabel(600),widget-3)">$INFO[Container(300).ListItem.Property(widgetName.3)]</value>
		<value condition="StringCompare(Control.GetLabel(600),widget-4)">$INFO[Container(300).ListItem.Property(widgetName.4)]</value>
		<value>$INFO[Container(300).ListItem.Property(widgetName)]</value>
	</variable>

	<include name="HomeMenuWidget">
		<!-- infopanel -->
		<control type="group">
			<top>-1100</top>
            <left>0</left>
            <height>100%</height>
            <width>100%</width>
            <visible>!Skin.String(widgetstyle, single box)</visible>
            <visible>ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)</visible>
            <animation type="Visible">
                <effect type="slide" start="0,0" end="0,1000" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Hidden">
                <effect type="slide" start="0,1000" end="0,0" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            
			<control type="image">
				<posx>0</posx>
				<posy>-100</posy>
				<width>100%</width>
				<texture border="15">diffuse/bgpanel.png</texture>
				<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
				<aspectratio>stretch</aspectratio>
				<height>970</height>
				<visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                <visible>!Skin.String(widgetstyle, single box)</visible>
				<animation type="Conditional" condition="Skin.String(widgetstyle, poster)">
                 <effect type="slide" start="0,0" end="0,100" time="0" delay="0"/>
			</animation>
            </control>

		<control type="label">
            <posx>405</posx>
            <posy>100</posy>
            <width>1465</width>
            <height>100</height>
            <font>Bold45</font>
            <align>left</align>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            <visible>!Skin.String(widgetstyle, single box)</visible>
			<animation effect="slide" end="-355,0" time="0" condition="StringCompare(Container(300).ListItem.Property(widget),weather)">Conditional</animation>
        </control>
		<control type="fadelabel">
            <posx>0</posx>
            <bottom>0</bottom>
            <width>100%</width>
            <height>100</height>
            <font>Bold45</font>
            <align>center</align>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
			<shadowcolor>black</shadowcolor>
            <label>$VAR[HomeMenuWidgetInfoLabel2]</label>
			<scroll>true</scroll>
			<scrollout>true</scrollout>
			<pauseatend>0</pauseatend>
			<visible>IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(Container(510).ListItem.Art(tvshow.clearlogo)) + IsEmpty(Container(510).ListItem.Art(clearlogo)) + IsEmpty(Window(home).Property(SkinHelper.Music.ClearLogo)) + !Skin.HasSetting(EnableTouchSupport)</visible>
			<animation time="400" effect="fade" delay="1000">Visible</animation>
			<animation time="0" effect="fade" delay="0">Hidden</animation>
        </control>
		
		
		<control type="textbox">
            <width>1455</width>
            <posx>405</posx>
            <posy>195</posy>
            <height max="300">auto</height>
            <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <align>justify</align>
            <font>Light28</font>
            <animation effect="slide" end="-355,0" time="0" condition="StringCompare(Container(300).ListItem.Property(widget),weather)">Conditional</animation>
        </control>
		
		
		<control type="image">
			<left>30</left>
			<posy>105</posy>
			<width>340</width>
			<height>485</height>
			<aspectratio align="left" aligny="top">keep</aspectratio>
			<bordertexture border="20" colordiffuse="black">diffuse/poster_shadow.png</bordertexture>
			<bordersize>20</bordersize>
			<texture background="true" diffuse="diffuse/poster.png" fallback="colors/color_keyboard.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
			<visible>!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !StringCompare(Container(300).ListItem.Property(widget),weather)</visible>
		</control>
		<control type="image">
			<left>30</left>
			<posy>125</posy>
			<width>330</width>
			<height>465</height>
            <visible>!Skin.String(widgetstyle, single box)</visible>
			<aspectratio align="left" aligny="top">keep</aspectratio>
			<texture background="true" fallback="DefaultMusicSongs.png" diffuse="diffuse/music_cover.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
			<visible>StringCompare(Container(300).ListItem.Property(widgetTarget),music)</visible>
		</control>
		<control type="image">
			<right>30</right>
			<posy>125</posy>
			<width>330</width>
			<height>465</height>
            <visible>!Skin.String(widgetstyle, single box)</visible>
			<texture fallback="DefaultAddonWeather.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
			<aspectratio align="left" aligny="top">keep</aspectratio>
			<visible>StringCompare(Container(300).ListItem.Property(widget),weather)</visible>
		</control>

		<!-- clearlogo -->
        <control type="image">
            <posx>755</posx>
            <bottom>-90</bottom>
            <width>400</width>
            <height>160</height>
            <aspectratio align="center" aligny="bottom">keep</aspectratio>
            <texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
            <visible>ControlGroup(77777).HasFocus + !Skin.HasSetting(EnableTouchSupport)</visible>
            <animation time="400" effect="fade" delay="1000">Visible</animation>
            <animation time="0" effect="fade" delay="0">Hidden</animation>
            <animation effect="slide" end="0,-25" time="0" condition="skin.hastheme(classic)">Conditional</animation>
            <visible>!Skin.String(widgetstyle, poster)</visible>
        </control>
        <control type="image">
            <posx>755</posx>
            <bottom>-90</bottom>
            <width>400</width>
            <height>110</height>
            <aspectratio align="center" aligny="bottom">keep</aspectratio>
            <texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
            <visible>ControlGroup(77777).HasFocus + !Skin.HasSetting(EnableTouchSupport)</visible>
            <animation time="400" effect="fade" delay="1000">Visible</animation>
            <animation time="0" effect="fade" delay="0">Hidden</animation>
            <animation effect="slide" end="0,-25" time="0" condition="skin.hastheme(classic)">Conditional</animation>
            <visible>Skin.String(widgetstyle, poster)</visible>
        </control>
        
        <!-- flags -->
        <control type="group">
            <height>60</height>
            <posx>405</posx>
            <posy>535</posy>
            <include>mediaflags</include>
            <visible>!StringCompare(Container(300).ListItem.Property(widgetTarget),music)</visible>
        </control>

            

        
    </control>    
        
        <!-- widgets -->
        <control type="group" id="77777">
            <defaultcontrol always="true">510</defaultcontrol>
            <visible>!IsEmpty(Container(300).ListItem.Property(widget))</visible>
            <visible>![SubString(Window(Home).Property(submenu),show) + Skin.String(SubmenuLayout, subpage)]</visible>
            <!--change widget button -->
            <control type="group">
                <right>60</right>
                <width>800</width>
                <height>60</height>
                <top>430</top>
                <include condition="!Skin.String(widgetstyle, single box)">changeWidgetButton</include>
                <visible allowhiddenfocus="true">ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)</visible>
            </control>
            <animation type="Conditional" condition="!Skin.HasSetting(AutoShowWidgets) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)]">
                <effect type="slide" start="0,0" end="0,-1000" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="!Skin.HasSetting(AutoShowWidgets) + [ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)]">
                <effect type="slide" start="0,-1000" end="0,0" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="!Skin.String(HomeLayout, simplehor) + Skin.HasSetting(AutoShowWidgets) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)]">
                <effect type="slide" start="0,0" end="0,-350" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="!Skin.String(widgetstyle, single box) + Skin.String(HomeLayout, simplehor) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)] + Skin.HasSetting(DisablePowerMenu) + !system.getbool(lookandfeel.enablerssfeeds)">
                <effect type="slide" start="0,0" end="0,180" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="!Skin.String(widgetstyle, single box) + Skin.String(HomeLayout, simplehor) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)] + ![Skin.HasSetting(DisablePowerMenu) + !system.getbool(lookandfeel.enablerssfeeds)]">
                <effect type="slide" start="0,0" end="0,50" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            
            <animation type="Conditional" condition="Skin.String(HomeLayout, 2) + Skin.String(widgetstyle, single box) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)] + ![Skin.HasSetting(DisablePowerMenu) + !system.getbool(lookandfeel.enablerssfeeds)]">
                <effect type="slide" start="0,0" end="0,-280" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            
            <animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + Skin.String(widgetstyle, single box) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)] + [Skin.HasSetting(DisablePowerMenu) + !system.getbool(lookandfeel.enablerssfeeds)]">
                <effect type="slide" start="0,0" end="0,-80" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + Skin.String(widgetstyle, single box) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)] + ![Skin.HasSetting(DisablePowerMenu) + !system.getbool(lookandfeel.enablerssfeeds)]">
                <effect type="slide" start="0,0" end="0,-230" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>

            <include>skinshortcuts-template-widget</include>
            <include>skinshortcuts-template-widget.1</include>
            <include>skinshortcuts-template-widget.2</include>
            <include>skinshortcuts-template-widget.3</include>
            
            <control type="group">
                <posy>650</posy>
                <right>55</right>
                <width>940</width>
                <height>341</height>
                <include condition="Skin.String(widgetstyle, single box)">widgetpanel_singlebox</include>
            </control>
            
            <!-- busy image while widget loading -->
            <control type="multiimage">
                <posy>500</posy>
                <right>55</right>
                <width>100</width>
                <height>100</height>
				<aspectratio>keep</aspectratio>
                <imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
                <timeperimage>100</timeperimage>
                <colordiffuse>$INFO[Skin.String(SpinnerTextureColor)]</colordiffuse>
                <fadetime>0</fadetime>
				<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
                <visible>Container(510).IsUpdating</visible>
            </control>
            
        </control>

    </include>

	<include name="SystemInfoWidget">
		<!--systeminfo widgets -->
		<item>
			<label>$LOCALIZE[155]: </label>
			<label2>$INFO[System.UsedSpacePercent]</label2>
			<thumb>special://skin/extras/defaulticonswide/disk.png</thumb>
			<property name="episodethumb">special://skin/extras/defaulticonswide/disk2.png</property>
			<property name="poster">special://skin/extras/defaulticonswide/disk.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/settings.jpg</property>
			<property name="plot">[CR]$INFO[System.TotalSpace] • $INFO[System.UsedSpace][CR]$INFO[System.HddTemperature]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[13271]</label>
			<label2>$INFO[System.CpuUsage] • $INFO[System.CpuFrequency]</label2>
			<thumb>special://skin/extras/defaulticonswide/cpu.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/cpu.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/cpu2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/cpu.jpg</property>
			<property name="plot">[CR]$LOCALIZE[401]: $INFO[System.CPUTemperature] • $LOCALIZE[13300]: $INFO[System.FanSpeed][CR]$LOCALIZE[12390]: $INFO[System.Uptime]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[31257]:</label>
			<label2>$INFO[System.Memory(used.percent)]</label2>
			<thumb>special://skin/extras/defaulticonswide/memory.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/memory.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/memory2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/memory.jpg</property>
			<property name="plot">[CR]$LOCALIZE[22012]: $INFO[System.Memory(total)] • $LOCALIZE[158]: $INFO[System.Memory(free)]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[1006]:</label>
			<label2>$INFO[Network.IPAddress]</label2>
			<thumb>special://skin/extras/defaulticonswide/network.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/network.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/network2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/networking.jpg</property>
			<property name="plot">$INFO[Network.LinkState][CR]$LOCALIZE[443]: $INFO[System.InternetState]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[131]:</label>
			<label2>$INFO[System.ScreenWidth]x$INFO[System.ScreenHeight]</label2>
			<thumb>special://skin/extras/defaulticonswide/display.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/display.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/display2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/display.jpg</property>
			<property name="plot">[CR]$INFO[System.ScreenResolution]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
	</include>
		
	<include name="WeatherWidget">
		
		<!--weather widgets -->
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day0.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day0.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day0.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day0.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day0.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day0.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
			</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day1.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day1.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day1.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day1.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day1.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day1.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day2.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day2.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day2.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day2.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day2.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day2.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day3.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day3.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day3.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day3.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day3.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day3.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day4.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day4.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day4.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day4.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day4.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day4.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day5.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day5.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day5.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day5.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day5.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day5.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
			<visible>!IsEmpty(Window(Weather).Property(Day5.Title))</visible>
			<visible>![Skin.String(widgetstyle, poster) + Skin.String(HomeLayout, simplever)]</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day6.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day6.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day6.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day6.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day6.FanartCode)].png</thumb>
			<property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day6.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
			<visible>!IsEmpty(Window(Weather).Property(Day6.Title))</visible>
			<visible>![Skin.String(widgetstyle, poster) + Skin.String(HomeLayout, simplever)]</visible>
		</item>
		
	</include>
	
	<include name="RCBWidget">
		<!--rom collection browser -->
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.1.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.1.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.1.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.1.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.1.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.1.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.2.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.2.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.2.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.2.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.2.LaunchCommand)]</onclick>
			<visible>!IsEmpty(indow(Weather).Property(MostPlayedROM.2.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.3.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.3.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.3.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.3.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.3.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.3.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.4.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.4.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.4.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.4.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.4.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.4.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.5.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.5.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.5.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.5.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.5.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.5.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.6.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.6.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.6.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.6.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.6.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.6.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.7.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.7.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.7.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.7.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.7.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.7.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.8.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.8.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.8.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.8.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.8.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.8.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.9.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.9.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.9.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.9.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.9.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.9.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.10.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.10.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.10.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.10.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.10.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.10.Title))</visible>
		</item>

	</include>
	
	<variable name="HomeMenuWidgetInfoLabel">
		<value condition="SubString(Container(300).ListItem.Property(widgetPath), plugin.video.youtube)">[B]$INFO[Container(510).ListItem.label][CR]$INFO[Container(510).ListItem.label2][/B]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(Container(510).ListItem.Property(type),livechannel)">[B]$INFO[Container(510).ListItem.Property(title)][/B]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(Container(510).ListItem.Property(type),recorded)">[B]$INFO[Container(510).ListItem.label][/B]</value>
		<value condition="StringCompare(Container(510).ListItem.Property(special), systeminfo)">[B]$INFO[Container(510).ListItem.label][/B] $INFO[Container(510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Title) + SubString(Container(510).ListItem.FolderPath, pvr://)">[B]$INFO[Container(510).ListItem.Title][/B]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Season) + !IsEmpty(Container(510).ListItem.Episode) + !StringCompare(Container(510).ListItem.TvShowTitle,Container(510).ListItem.Title)">[B][UPPERCASE]S$INFO[Container(510).ListItem.Season]E$INFO[Container(510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(510).ListItem.Title][/B]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Title)">[B]$INFO[Container(510).ListItem.Title][/B]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Label)">[B]$INFO[Container(510).ListItem.Label][/B]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoLabel2">
		<value condition="!IsEmpty(Container(510).ListItem.Tagline)">$INFO[Container(510).ListItem.Tagline]</value>
		<value condition="!IsEmpty(Container(510).ListItem.TvShowTitle)">$INFO[Container(510).ListItem.TvShowTitle]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Artist)">$INFO[Container(510).ListItem.Artist]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoclearlogo">
		<value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.clearlogo))">$INFO[Container(510).ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Art(clearlogo))">$INFO[Container(510).ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Property(ChannelLogo))">$INFO[Container(510).ListItem.Property(ChannelLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.Music.ClearLogo))">$INFO[Window(home).Property(SkinHelper.Music.ClearLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.PVR.ClearLogo))">$INFO[Window(home).Property(SkinHelper.PVR.ClearLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.PVR.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.PVR.ChannelLogo)]</value>
    </variable>
	
	<variable name="SpotLightWidgetInfoclearlogo">
		<value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
    </variable>
    
    <variable name="SpotLightWidgetInfoThumb">
		<value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
        <value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="SpotLightWidgetInfoThumbAlt">
		<value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.clearlogo))">$INFO[Container(510).ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Art(clearlogo))">$INFO[Container(510).ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Art(landscape))">$INFO[Container(510).ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.landscape))">$INFO[Container(510).ListItem.Art(tvshow.landscape)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Art(poster))">$INFO[Container(510).ListItem.Art(poster)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.poster))">$INFO[Container(510).ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Property(ChannelLogo))">$INFO[Container(510).ListItem.Property(ChannelLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.Music.ClearLogo))">$INFO[Window(home).Property(SkinHelper.Music.ClearLogo)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Icon)">$INFO[Container(510).ListItem.Icon]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoPlot">
        <!-- spotlight widget (inside container) -->
        <value condition="!IsEmpty(ListItem.Property(ShortPlot))">$INFO[ListItem.Property(ShortPlot)]</value>
		<value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value condition="!IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
        <value condition="!IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
        <value condition="!IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
        <value condition="!IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.Music.Info))">$INFO[Window(home).Property(SkinHelper.Music.Info)]</value>
        <!-- normal widgets info - in container 510 -->
		<value condition="!IsEmpty(Container(510).ListItem.Property(ShortPlot))">$INFO[Container(510).ListItem.Property(ShortPlot)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Plot)">$INFO[Container(510).ListItem.Plot]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(Plot))">$INFO[Container(510).ListItem.Property(Plot)]$INFO[Container(510).ListItem.label2,[CR]]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Property(Album_Description))">$INFO[Container(510).ListItem.Property(Album_Description)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.Property(Artist_Description))">$INFO[Container(510).ListItem.Property(Artist_Description)]</value>
        <value condition="!IsEmpty(Container(510).ListItem.PictureDesc)">$INFO[Container(510).ListItem.PictureDesc]</value>
        <value condition="!IsEmpty(Container(510).ListItem.PictureComment)">$INFO[Container(510).ListItem.PictureComment]</value>
        <value condition="!IsEmpty(Container(510).ListItem.PictureKeywords)">$INFO[Container(510).ListItem.PictureKeywords]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.Music.Info))">$INFO[Window(home).Property(SkinHelper.Music.Info)]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoPlotAlt">
		<!-- PVR -->
        <value condition="!IsEmpty(ListItem.Property(StartTime)) + !IsEmpty(ListItem.Property(ChannelName))">[B]$INFO[ListItem.Property(ChannelName),, • ]$INFO[ListItem.Property(StartTime),, - ]$INFO[ListItem.Property(EndTime),, • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<value condition="!IsEmpty(ListItem.StartTime) + !IsEmpty(ListItem.ChannelName)">[B]$INFO[ListItem.ChannelName,, • ]$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime,, • ]$INFO[ListItem.Genre][/B][CR]$INFO[Container(510).ListItem.EpisodeName,, • ]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- tvshows, seasons -->
        <value condition="!IsEmpty(ListItem.TvShowTitle) + !IsEmpty(ListItem.Genre)">[B]$INFO[ListItem.Year,, • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- episodes -->
        <value condition="!IsEmpty(ListItem.TvShowTitle)">[B]$INFO[ListItem.TvShowTitle,, • ]$INFO[ListItem.Premiered,, • ]$INFO[ListItem.Duration,,min.][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<!-- songs -->
        <value condition="!IsEmpty(ListItem.Artist) + !IsEmpty(ListItem.Album)">[B]$INFO[ListItem.Artist,, • ]$INFO[ListItem.Album,, • ]$INFO[ListItem.Duration][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- albums -->
        <value condition="!IsEmpty(ListItem.Artist)">[B]$INFO[ListItem.Artist,, • [/B]][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- movies -->
        <value condition="!IsEmpty(ListItem.Year)">[B]$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,,min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- PVR -->
        <value condition="!IsEmpty(Container(510).ListItem.Property(StartTime))">[B]$INFO[Container(510).ListItem.Property(ChannelName),, • ]$INFO[Container(510).ListItem.Property(StartTime),, - ]$INFO[Container(510).ListItem.Property(EndTime),, • ]$INFO[Container(510).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<value condition="!IsEmpty(Container(510).ListItem.StartTime)">[B]$INFO[Container(510).ListItem.ChannelName,, • ]$INFO[Container(510).ListItem.StartTime,, - ]$INFO[Container(510).ListItem.EndTime,, • ]$INFO[Container(510).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		
        <!-- tvshows, seasons -->
        <value condition="!IsEmpty(Container(510).ListItem.TvShowTitle) + !IsEmpty(Container(510).ListItem.Genre)">[B]$INFO[Container(510).ListItem.TvShowTitle,, • ]$INFO[Container(510).ListItem.Year,, • ]$INFO[Container(510).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- episodes -->
        <value condition="!IsEmpty(Container(510).ListItem.TvShowTitle)">[B]$INFO[Container(510).ListItem.TvShowTitle,, • ]$INFO[Container(510).ListItem.Premiered,, • ]$INFO[Container(510).ListItem.Duration,,min.][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<!-- movies -->
        <value condition="!IsEmpty(Container(510).ListItem.Year)">[B]$INFO[Container(510).ListItem.Year,, • ]$INFO[Container(510).ListItem.Duration,,min. • ]$INFO[Container(510).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- songs -->
        <value condition="!IsEmpty(Container(510).ListItem.Artist) + !IsEmpty(Container(510).ListItem.Album)">[B]$INFO[Container(510).ListItem.Artist,, • ]$INFO[Container(510).ListItem.Album,, • ]$INFO[Container(510).ListItem.Duration][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value>$VAR[HomeMenuWidgetInfoPlot]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoPoster">
		<value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.poster))">$INFO[Container(510).ListItem.Art(tvshow.poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(medium_poster))">$INFO[Container(510).ListItem.Property(medium_poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Art(poster))">$INFO[Container(510).ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(poster))">$INFO[Container(510).ListItem.Property(poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(tvshow.poster))">$INFO[Container(510).ListItem.Property(tvshow.poster)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.PVR.Poster))">$INFO[Window(Home).Property(SkinHelper.PVR.Poster)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.PVR.CharacterArt))">$INFO[Window(Home).Property(SkinHelper.PVR.CharacterArt)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.PVR.Landscape))">$INFO[Window(Home).Property(SkinHelper.PVR.Landscape)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.PVR.FanArt))">$INFO[Window(Home).Property(SkinHelper.PVR.FanArt)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.PVR.Thumb))">$INFO[Window(Home).Property(SkinHelper.PVR.Thumb)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Icon)">$INFO[Container(510).ListItem.Icon]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(FanArt))">$INFO[Container(510).ListItem.Property(FanArt)]</value>
		<value>ListItem.Thumb</value>
    </variable>
	
	<include name="widget_layout_vertical_poster">
        <bottom>90</bottom>
        <right>40</right>
		<width>1320</width>
		<height>760</height>
		<orientation>vertical</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0" end="0,350" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,5) | StringCompare(Container(510).NumItems,5)">Conditional</animation>
		<animation effect="slide" end="10,-20" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music)">Conditional</animation>
        <include>widget_layout</include>
	</include>
	
	<include name="widget_layout_vertical_landscape">
		<bottom>110</bottom>
        <right>40</right>
		<width>1110</width>
		<height>630</height>
		<orientation>vertical</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
		<animation effect="slide" start="0" end="368" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0" end="368" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0" end="0,210" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0" end="0,210" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,6)">Conditional</animation>
		<animation effect="slide" end="60" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music)">Conditional</animation>
        <include>widget_layout</include>
	</include>
	
	<include name="widget_layout_horizontal_poster">
        <posx>50</posx>
		<posy>480</posy>
		<width>1827</width>
		<height>380</height>
		<itemgap>5</itemgap>
		<orientation>horizontal</orientation>
        <ondown>300</ondown>
        <onup>$VAR[changeWidgetClickActions]</onup>
        <onup>RunScript(script.skin.helper.service,action=setfocus,control=510)</onup>
		<animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)]">
			<effect type="slide" start="0,0" end="0,-160" time="300" tween="cubic" easing="inout" delay="0"/>
		</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,6)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,5)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,1)">Conditional</animation>
		<animation effect="slide" end="0,30" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !Skin.String(HomeLayout, simplehor)">Conditional</animation>
		<animation effect="slide" end="0,110" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(HomeLayout, simplehor)">Conditional</animation>
        <include>widget_layout</include>
	</include>
    
    <include name="widget_layout_horizontal_landscape">
		<posx>50</posx>
		<posy>500</posy>
		<width>1830</width>
		<height>245</height>
        <ondown>300</ondown>
        <onup>$VAR[changeWidgetClickActions]</onup>
        <onup>RunScript(script.skin.helper.service,action=setfocus,control=510)</onup>
        <orientation>horizontal</orientation>
        <include>widget_layout</include>
	</include>
	
    <include name="widget_layout_single_box">
        <posx>10</posx>
		<posy>10</posy>
		<width>1</width>
		<height>1</height>
        <ondown>300</ondown>
        <onup>$VAR[changeWidgetClickActions]</onup>
        <onup>RunScript(script.skin.helper.service,action=setfocus,control=510)</onup>
        <onleft>510</onleft>
        <onright>510</onright>
        <orientation>horizontal</orientation>
        <include>widget_layout</include>  
    </include>
    
    <include name="widgetpanel_singlebox">
        <control type="group">
            <visible>!IsEmpty(Container(300).ListItem.Property(widget))</visible>
            <width>940</width>
            <height>340</height>
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>darkgrey</colordiffuse>
            </control>
            <control type="image">
                <bordersize>-3</bordersize>
                <texture border="5">diffuse/border.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
                <visible>Control.HasFocus(510)</visible>
            </control>
            
            <!-- poster image -->
            <control type="image">
                <width>240</width>
                <height>339</height>
                <texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumb]</texture>
                <aspectratio scalediffuse="true" aligny="top" align="left">keep</aspectratio>
                <bordersize>8</bordersize>
                <visible>!Container(510).IsUpdating</visible>
            </control> 
            
            <!-- busy image -->
            <control type="image">
                <width>200</width>
                <height>200</height>
                <texture>special://skin/extras/busy_spinners/4 segment circle.gif</texture>
                <aspectratio aligny="top" align="left">keep</aspectratio>
                <bordersize>30</bordersize>
                <visible>Container(510).IsUpdating</visible>
            </control>

            <control type="button" id="511">
				<left>251</left>
                <top>5</top>
                <width>650</width>
                <aligny>center</aligny>
                <align>left</align>
                <textoffsetx>0</textoffsetx>
                <height>50</height>
                <font>Reg30</font>
				<onleft>300</onleft>
                <onright>300</onright>
				<onup>300</onup>
				<ondown>510</ondown>
				<label>$VAR[changeWidgetLabel]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
				<onclick>$VAR[changeWidgetClickActions]</onclick>
				<texturenofocus>-</texturenofocus>
			</control>
            <control type="label">
                <left>251</left>
                <top>55</top>
                <width>650</width>
                <aligny>center</aligny>
                <height>80</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <left>251</left>
                <width>650</width>
                <top>132</top>
                <height>145</height>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Control.HasFocus(510)" />
                <autoscroll delay="4000" time="3000" repeat="10000" condition="Control.HasFocus(510)" />
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
            <control type="group">
				<height>36</height>
				<left>251</left>
				<bottom>10</bottom>
				<include>mediaflags</include>
				<visible>!StringCompare(Container(300).ListItem.Property(widgetTarget),music)</visible>
			</control>
            
        </control>
    </include>
	    
	<include name="widget_layout">
		<ondown>ClearProperty(ShowWidget, Home)</ondown>
		<onback>300</onback>
		<onback>ClearProperty(ShowWidget, Home)</onback>
        <onfocus>Setproperty(ShowWidget,show)</onfocus>
		<orientation>horizontal</orientation>
		<scrolltime tween="cubic" easing="inout">500</scrolltime>
        
        <animation condition="!Control.HasFocus(510) + Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
			<effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom" />
			<effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide" />
			<effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade" />
		</animation>
        <animation time="300" effect="fade" start="0" end="100" reversible="true" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>

		<itemlayout width="366" height="210" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, landscape)">
			<control type="group">
                <width>354</width>
                <height>200</height>
                <include>ThumbsViewLayout</include>
            </control>
		</itemlayout>
		<focusedlayout width="366" height="210" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, landscape)">
			<control type="group">
                <width>354</width>
                <height>200</height>
                <include>ThumbsViewLayoutFocus</include>
                <control type="button">
					<visible>false</visible>
					<onfocus>Setproperty(ShowWidget,show)</onfocus>
				</control>
            </control>
		</focusedlayout>
		<itemlayout height="265" width="262" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !Skin.String(widgetstyle, single box)">
          <control type="group">
                <width>240</width>
                <height>240</height>
                <include>SquarePosterPanelLayout</include>
            </control>
        </itemlayout>
        <focusedlayout height="265" width="262" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !Skin.String(widgetstyle, single box)">
          <control type="group">
                <width>240</width>
                <height>240</height>
                <include>SquarePosterPanelLayoutFocus</include>
                <control type="button">
					<visible>false</visible>
					<onfocus>Setproperty(ShowWidget,show)</onfocus>
				</control>
            </control>
        </focusedlayout>
		
		<itemlayout height="380" width="261" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, poster)">
          <control type="group">
            <width>250</width>
            <height>370</height>
            <include>PosterPanelLayout</include>
          </control>
        </itemlayout>
        <focusedlayout height="380" width="261" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, poster)">
          <control type="group">
            <width>250</width>
            <height>370</height>
            <include>PosterPanelLayoutFocus</include>
            <control type="button">
					<visible>false</visible>
					<onfocus>Setproperty(ShowWidget,show)</onfocus>
				</control>
          </control>
        </focusedlayout>
	
        <itemlayout height="1" width="1" condition="Skin.String(widgetstyle, single box)" />
        <focusedlayout height="1" width="1" condition="Skin.String(widgetstyle, single box)" />

    </include>

    <variable name="changeWidgetClickActions">
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.1)) + StringCompare(Control.GetLabel(600),widget-0)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],1)</value>
        <value condition="IsEmpty(Container(300).ListItem.Property(widget.1)) + StringCompare(Control.GetLabel(600),widget-0)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],0)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.2)) + StringCompare(Control.GetLabel(600),widget-1)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],2)</value>
        <value condition="IsEmpty(Container(300).ListItem.Property(widget.2)) + StringCompare(Control.GetLabel(600),widget-1)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],0)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.3)) + StringCompare(Control.GetLabel(600),widget-2)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],3)</value>
        <value condition="IsEmpty(Container(300).ListItem.Property(widget.3)) + StringCompare(Control.GetLabel(600),widget-2)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],0)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.4)) + StringCompare(Control.GetLabel(600),widget-3)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],4)</value>
        <value condition="IsEmpty(Container(300).ListItem.Property(widget.4)) + StringCompare(Control.GetLabel(600),widget-3)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],0)</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-4)">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],0)</value>
    </variable>
    
    
    <include name="changeWidgetButton">
        <include>animation_fade_visible_hidden</include>
			<control type="image">
				<colordiffuse>$INFO[Skin.String(ButtonTextColor)]</colordiffuse>
				<texture flipy="true">dialogs/default/separator.png</texture>
				<visible>!IsEmpty(Control.GetLabel(511))</visible>
			</control>
            <control type="image">
				<colordiffuse>$INFO[Skin.String(ButtonTextColor)]</colordiffuse>
				<texture>dialogs/default/separator.png</texture>
				<visible>!IsEmpty(Control.GetLabel(511))</visible>
                <height>45</height>
			</control>
            <control type="label" id="512">
				<right>0</right>
				<width>800</width>
				<height>45</height>
				<align>right</align>
				<font>Reg30</font>
				<textoffsetx>10</textoffsetx>
				<label>$VAR[changeWidgetLabel]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
				<visible allowhiddenfocus="true">!IsEmpty(Container(300).ListItem.Property(widget)) + !Control.IsVisible(511)</visible>
			</control>
			<control type="button" id="511">
				<right>0</right>
				<width>600</width>
				<height>45</height>
				<align>right</align>
				<font>Reg30</font>
				<onleft>300</onleft>
                <onright>300</onright>
				<ondown>510</ondown>
				<textoffsetx>50</textoffsetx>
				<label>$VAR[changeWidgetLabel]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <onclick>$VAR[changeWidgetClickActions]</onclick>
                <onup>$VAR[changeWidgetClickActions]</onup>
                <texturenofocus>-</texturenofocus>
				<visible allowhiddenfocus="true">!IsEmpty(Container(300).ListItem.Property(widget)) + !IsEmpty(Container(300).ListItem.Property(widget.1))</visible>
			</control>
			<control type="image">
				<right>5</right>
				<posy>8</posy>
				<width>30</width>
				<height>30</height>
				<texture colordiffuse="$INFO[Skin.String(ViewDetailsTextColor)]">home/home_arrow_up.png</texture>
				<visible>Control.IsVisible(511) + !IsEmpty(Container(300).ListItem.Property(widget.1))</visible>
			</control>
    </include>
    
	
	</includes>
