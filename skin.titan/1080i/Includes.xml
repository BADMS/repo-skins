<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include file="Defaults.xml" />
    <include file="IncludesVariables.xml" />
    <include file="IncludesHomeTitanTiles.xml" />
    <include file="IncludesHomeMenuWidgets.xml" />
	<include file="IncludesHomeMenuSubMenu.xml" />
    <include file="IncludesNowPlaying.xml" />
    <include file="View_10_SimplePVR.xml" />
    <include file="View_50_List.xml" />
	<include file="View_51_BigList.xml" />
    <include file="View_55_BannerList.xml" />
    <include file="View_500_Showcase.xml" />
	<include file="View_52_HorizontalPanel.xml" />
    <include file="View_53_PanelDetails.xml" />
	<include file="View_54_Panel.xml" />
	<include file="View_56_BannerPlex.xml" />
	<include file="View_57_BigPanel.xml" />
	<include file="View_58_LargePoster.xml" />
	<include file="View_59_BigPanelDetails.xml" />
	<include file="View_501_Landscape.xml" />
	<include file="View_502_LandscapeSingle.xml" />
	<include file="View_503_Logos.xml" />
    <include file="View_504_BigList2.xml" />
    <include file="View_505_LandscapeDetails.xml" />
	<include file="View_506_ExtendedList.xml" />
	<include file="View_507_FanArt.xml" />
	<include file="View_508_SinglePoster.xml" />
	<include file="View_509_PanelSquare.xml" />
	<include file="View_510_PanelSquareDetails.xml"/>
	<include file="View_511_Thumbs.xml"/>
	<include file="View_512_ThumbsDetails.xml" />
	<include file="View_513_PosterRow.xml" />
	<include file="View_514_PosterShift.xml" />
	<include file="View_515_LowList.xml" />
	<include file="View_516_SlimList.xml" />
    <include file="View_517_Cards.xml" />
    <include file="View_518_Wide.xml" />
    <include file="View_519_BigPanel_Wall.xml" />
    <include file="View_520_Panel_Wall.xml" />
    <include file="View_521_Panel_Low.xml" />
    <include file="IncludesViews.xml" />
	<include file="IncludesSideBladeMenu.xml" />
    <include file="IncludesOSD.xml" />
    <include file="IncludesSkinSetings.xml" />
    <include file="IncludesContextMenu.xml" />
	<include file="IncludesHomeExtended.xml" />
	<include file="IncludesHomeSimpleHorizontal.xml" />
	<include file="IncludesHomeSimpleVertical.xml" />
	<include file="IncludesHomeNetflix.xml" />
    <include file="IncludesHomeWin10.xml" />
	<include file="IncludesTouchSupport.xml" />
	<include file="IncludesDefaultSkinSettings.xml" />
	<include file="IncludesBackgroundBuilding.xml" />
	<include file="IncludesAnimations.xml" />
	<include file="IncludesWeather.xml" />
	<include file="script-skinshortcuts-includes.xml"/>
    <include file="IncludesDebugInfo.xml" condition="Skin.HasSetting(DebugGrid) | Skin.HasSetting(DebugInfo)" />

	<!--Titan Version-->
    <include name="TitanVersion">
        <control type="label">
            <right>60</right>
            <bottom>35</bottom>
            <width>1000</width>
            <align>right</align>
            <font>Light34</font>
            <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
            <label>$INFO[Window(Home).Property(SkinHelper.skinTitle)]</label>
			<animation type="Conditional" condition="skin.hastheme(classic)">
                <effect type="slide" start="0,0" end="0,-30" time="0" tween="cubic" easing="inout" delay="0" />
            </animation>
        </control>
    </include>

    <!--Common-->
    <include name="HiddenButton">
        <posx>-20</posx>
        <posy>-20</posy>
        <width>1</width>
        <height>1</height>
        <label>-</label>
        <texturenofocus>-</texturenofocus>
        <texturefocus>-</texturefocus>
    </include>
    <include name="DimensionsFullscreen">
        <posx>0</posx>
        <posy>0</posy>
        <width>100%</width>
        <height>100%</height>
    </include>
	
	<!-- Footer -->
	<include name="Footer">
		<control type="group">
			<animation type="Conditional" condition="[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + !Control.IsVisible(99123)">
                <effect type="slide" start="0,0" end="0,800" time="400" tween="cubic" easing="inout" delay="0" />
            </animation>
			<animation type="Conditional" condition="skin.hastheme(classic)">
                <effect type="slide" start="0,0" end="0,-30" time="0" tween="cubic" easing="inout" delay="0" />
            </animation>
            <animation type="Conditional" condition="StringCompare(Window(Home).Property(showinfopanel),show)">
                <effect type="slide" start="0,0" end="0,300" time="800" tween="cubic" easing="inout" delay="0" />
            </animation>

			<!--Footer Background-->
			<control type="group">						
				<control type="image">	
					<posx>50</posx>
					<bottom>40</bottom>
					<width>1820</width>
					<height>84</height>
					<animation type="Conditional" condition="window.isactive(home)">
						<effect type="slide" start="0,0" end="0,15" time="0" tween="cubic" easing="inout" delay="0" />
					</animation>
					<texture>home/home_rss.png</texture>
					<visible>[!Skin.HasSetting(NoFooterBar) + skin.hastheme(classic)]</visible>
					<visible>![window.isactive(home) + Skin.HasSetting(NoFooterBarOnHome)]</visible>
					<visible>![[Skin.String(HomeLayout, 1) | Skin.String(HomeLayout, 2) | Skin.String(HomeLayout, 3) | Skin.String(HomeLayout, 1small) | Skin.String(HomeLayout, 2small) | Skin.String(HomeLayout, 3small)] + Control.IsVisible(4444) + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]]</visible>
				</control>
				<control type="image">
					<posx>0</posx>
					<bottom>0</bottom>
					<width>100%</width>
					<height>110</height>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$INFO[Skin.String(FooterPanelColor)]</colordiffuse>
					<visible>!skin.hastheme(classic) + !skin.hassetting(nofooterbar)</visible>
					<visible>![window.isactive(home) + Skin.HasSetting(NoFooterBarOnHome)]</visible>
				</control>
			</control>
			
			<!-- touchscreen support -->
			<include condition="Skin.HasSetting(EnableTouchSupport)">TouchControlsFooter</include>

			<!-- PVR Content -->
            <include condition="Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml)">FooterContentPVR</include>

            <!-- Normal Content -->
            <include condition="![Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml)] + !Window.IsActive(home)">FooterContentGeneral</include>

            <!--RSS feed on home -->
            <include condition="Window.IsActive(Home) + system.getbool(lookandfeel.enablerssfeeds) + [Skin.String(HomeLayout, 1) | Skin.String(HomeLayout, 2) | Skin.String(HomeLayout, 3) | Skin.String(HomeLayout, 1small) | Skin.String(HomeLayout, 2small) | Skin.String(HomeLayout, 3small) | Skin.String(HomeLayout, simplehor)]">FooterContentHome</include>
            <!-- codec info normal-->
			<control type="group">
				<posx>60</posx>
				<height>50</height>
				<bottom>20</bottom>
				<include condition="[Window.IsActive(MyVideoNav.xml) | Window.IsActive(MyVideoPlaylist.xml)]">mediaflags</include>
                <animation type="Conditional" condition="skin.hastheme(classic)">
                    <effect type="slide" start="0,0" end="0,-12" time="0" tween="cubic" easing="inout" delay="0" />
                </animation>
                <!-- slide if touchcontrols present -->
                <animation type="Conditional" condition="Control.IsVisible(99123)">
                    <effect type="slide" start="0" end="280" time="0" tween="cubic" easing="inout" delay="0" />
                </animation>
            </control>
			
			<!--Rating normal-->
			<include condition="window.isactive(videolibrary) + !skin.hastheme(classic) + ![Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter)]">StarRatingFooter</include>
            <include condition="window.isactive(videolibrary) + !skin.hastheme(classic) + [Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter)]">AltRatingFooter</include>
			<include condition="window.isactive(musiclibrary)">StarRatingMusicFooter</include>
     			
		</control>
	</include>
    
    <include name="footerColorDiffuse">
        <colordiffuse>$INFO[Skin.String(FooterTextColor)]</colordiffuse>
    </include>
    <include name="videoInfoColorDiffuse">
        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
    </include>
    
    <include name="AltRatingFooter">
        <!--Rating + Studio-->
			<control type="group">
				<visible>[Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter)]</visible>
				<control type="image">
					<!--studio logo -->
					<right>50</right>
					<bottom>5</bottom>
					<width>400</width>
					<height>90</height>
					<aspectratio aligny="center" align="right">keep</aspectratio>
					<fadetime>250</fadetime>
					<include condition="!Skin.HasSetting(PreferColorStudioLogos) + !Skin.String(SkinHelper.StudioImagesPath)">footerColorDiffuse</include>
					<bordersize>2</bordersize>
					<texture>$VAR[studiologo]</texture>
                    <visible>Skin.HasSetting(StudioInFooter)</visible>
                    <animation effect="slide" end="-100" time="0" condition="!IsEmpty(ListItem.Rating) + Skin.HasSetting(IMDBRatingInFooter)">Conditional</animation>
                    <visible>!IsEmpty(Window(home).Property(SkinHelper.ListItemStudioLogo)) | [System.HasAddon(resource.images.studios.coloured) + Skin.HasSetting(PreferColorStudioLogos) + !IsEmpty(Window(home).Property(SkinHelper.ListItemStudioLogoColor))]</visible>
				</control>
                <!-- IMDB rating -->
                <control type="group">
                    <visible>!IsEmpty(ListItem.Rating) + Skin.HasSetting(IMDBRatingInFooter)</visible>
                    <control type="image">
                        <right>50</right>
                        <height>70</height>
                        <width>84</width>
                        <bottom>15</bottom>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>black</colordiffuse>
                        <aspectratio>stretch</aspectratio>
                    </control>
                    <control type="image">
                        <right>50</right>
                        <height>70</height>
                        <width>85</width>
                        <bottom>15</bottom>
                        <bordersize>2</bordersize>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>darkgrey</colordiffuse>
                        <aspectratio>stretch</aspectratio>
                    </control>
                    <control type="image">
                        <!--imdb logo-->
                        <right>50</right>
                        <bottom>45</bottom>
                        <width>84</width>
                        <height>40</height>
                        <bordersize>2</bordersize>
                        <texture>flags/imdb_logo.png</texture>
                    </control>
                    <control type="label">
                        <!--Rating modern-->
                        <right>50</right>
                        <bottom>17</bottom>
                        <width>84</width>
                        <height>30</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>flags</font>
                        <textcolor>white</textcolor>
                        <label fallback="0.0">$INFO[ListItem.Rating]</label>
                    </control>
                </control>

			</control>	

    </include>
    
    <include name="FooterContentPVR">
        <!--Progress (PVR)-->
        <control type="group">
            <animation effect="slide" end="-30,15" time="0" condition="!skin.hastheme(classic)">Conditional</animation>
            <visible>[window.isactive(mypvrchannels.xml) | window.isactive(mypvrguide.xml)] + !Control.IsVisible(99123)</visible>
            <bottom>35</bottom>
            <height>65</height>
            <control type="label">
                <!--Start-->
                <posx>90</posx>
                <posy>0</posy>
                <width>400</width>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <info>ListItem.StartTime</info>
            </control>
            <control type="progress">
                <!--Progress Bar-->
                <posx>230</posx>
                <posy>25</posy>
                <width>150</width>
                <info>ListItem.Progress</info>
                <visible>Skin.HasTheme(classic)</visible>
            </control>
            <control type="progress">
                <!--Progress Bar-->
                <posx>230</posx>
                <posy>23</posy>
                <width>150</width>
                <height>20</height>
                <info>ListItem.Progress</info>
                <visible>!Skin.HasTheme(classic)</visible>
            </control>
            <control type="label">
                <!--End-->
                <posx>405</posx>
                <posy>0</posy>
                <width>400</width>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <info>ListItem.EndTime</info>
            </control>
        </control>
        <!-- Programname etc -->
        <control type="group">
            <animation effect="slide" end="-20,-16" time="0" condition="skin.hastheme(classic)">Conditional</animation>
            <bottom>35</bottom>
            <height>65</height>
            <control type="label">
                <!--live tv channel-->
                <visible>IsEmpty(Control.Getlabel(44123))</visible>
                <right>60</right>
                <posy>16</posy>
                <width>500</width>
                <align>right</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.ChannelName]</label>
            </control>
                 <control type="label">
                <!--live tv programname-->
                <posx>610</posx>
                <posy>16</posy>
                <width>700</width>
                <align>center</align>
                <font>Bold30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.Title]</label>
                <visible>!Control.IsVisible(884)</visible>
            </control>
                 <control type="image" id="44123">
                <visible>!skin.hastheme(classic)</visible>
                <right>60</right>
                <posy>0</posy>
                <width>260</width>
                <height>100</height>
                <texture>$VAR[channellogo]</texture>
                <aspectratio align="right" aligny="center">keep</aspectratio>
            </control>
            <control type="label">
                <!--live tv diskspace-->
                <visible>window.isactive(mypvrrecordings.xml) | window.isactive(mypvrtimers.xml) | window.isactive(mypvrsearch.xml)</visible>
                <left>60</left>
                <posy>16</posy>
                <width>500</width>
                <align>left</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[PVR.backenddiskspace]</label>
                <visible>!Control.IsVisible(99123)</visible>
            </control>
             </control>
    </include>

    <include name="FooterContentGeneral">
        <control type="group">
            <!--Title-->
            <visible>!Window.IsActive(DialogVideoInfo.xml) + !Window.IsVisible(DialogFavourites.xml)</visible>
            <animation effect="slide" end="0,16" time="0" condition="!skin.hastheme(classic)">Conditional</animation>
            <height>80</height>
            <bottom>20</bottom>
            <control type="label">
                <!--Label (classic only)-->
                <posx>610</posx>
                <posy>0</posy>
                <width>700</width>
                <align>center</align>
                <font>Bold30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.label]</label>
                <visible>!Control.IsVisible(884)</visible>
                <visible>![Window.IsActive(MyVideoNav.xml) | Window.IsActive(MyVideoPlaylist.xml)] | ListItem.IsCollection | Skin.HasTheme(classic) | IsEmpty(ListItem.VideoAspect)</visible>
            </control>
            <control type="label">
                <visible>Container.Content(songs)</visible>
                <visible>!Control.IsVisible(99123)</visible>
                <!--Album, Songs-->
                <left>60</left>
                <align>left</align>
                <posy>0</posy>
                <width>500</width>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.Album]</label>
            </control>
                 <control type="label">
                <!--Artist-->
                <visible>[Container.Content(albums) | Container.Content(songs)] + IsEmpty(ListItem.Rating)</visible>
                <right>60</right>
                <posy>0</posy>
                <width>500</width>
                <align>right</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.Artist]</label>
            </control>
                 <control type="label">
                <!--Playlist length-->
                <visible>Window.IsActive(MyVideoPlaylist.xml)</visible>
                <right>60</right>
                <posy>0</posy>
                <width>500</width>
                <align>right</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[Container.Totaltime,$LOCALIZE[31597]: ]</label>
            </control>
            <!-- repo last updated label -->
            <control type="label">
                <right>60</right>
                <align>right</align>
                <posy>0</posy>
                <width>550</width>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$LOCALIZE[31334]: $INFO[Window().Property(Updated)]</label>
                <visible>Window.IsActive(AddonBrowser)</visible>
                <visible>!Control.IsVisible(99123)</visible>
            </control>
        </control>
    </include>

    <include name="FooterContentHome">
        <!--RSS Text without touch classic-->			
        <control type="rss">	
            <description>RSS Feed</description>
            <posx>80</posx>
            <bottom>20</bottom>
            <width>1760</width>
            <height>50</height>
            <font>rss</font>
            <urlset>1</urlset>
            <titlecolor>$INFO[Skin.String(GeneralHighlightTextColor)]</titlecolor>
            <headlinecolor>$INFO[Skin.String(FooterTextColor)]</headlinecolor>
            <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
            <visible>skin.hastheme(classic)</visible>
            <visible>!Control.IsVisible(99123)</visible>
            <visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
            <visible>![[Control.IsVisible(4444) + IntegerGreaterThan(Container(4444).NumItems,0)] + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]] | Skin.String(HomeLayout, simplehor)</visible>
        </control>
        <!--RSS Text without touch normal-->
        <control type="rss">	
            <description>RSS Feed</description>
            <posx>50</posx>
            <bottom>22</bottom>
            <width>1820</width>
            <height>50</height>
            <font>rss</font>
            <urlset>1</urlset>
            <titlecolor>$INFO[Skin.String(GeneralHighlightTextColor)]</titlecolor>
            <headlinecolor>$INFO[Skin.String(FooterTextColor)]</headlinecolor>
            <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
            <visible>!skin.hastheme(classic)</visible>
            <visible>![[Control.IsVisible(4444) + IntegerGreaterThan(Container(4444).NumItems,0)] + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]] | Skin.String(HomeLayout, simplehor)</visible>
            <visible>!Window.IsVisible(DialogButtonMenu.xml) + !Control.IsVisible(99123)</visible>
        </control>
        <!--RSS Text with touchcontrols (99123) visible-->
        <control type="rss">	
            <description>RSS Feed</description>
            <posx>380</posx>
            <bottom>19</bottom>
            <width>1340</width>
            <height>50</height>
            <font>rss</font>
            <urlset>1</urlset>
            <titlecolor>$INFO[Skin.String(GeneralHighlightTextColor)]</titlecolor>
            <headlinecolor>$INFO[Skin.String(FooterTextColor)]</headlinecolor>
            <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
            <visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
            <visible>!StringCompare(Window(home).Property(ShowFastAllMovies), show)</visible>
            <visible>![[Control.IsVisible(4444) + IntegerGreaterThan(Container(4444).NumItems,0)] + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]] | Skin.String(HomeLayout, simplehor)</visible>
            <visible>!Window.IsVisible(DialogButtonMenu.xml) + Control.IsVisible(99123)</visible>
            <animation effect="slide" start="0,0" end="-15,-2" center="auto" easing="out" tween="back" time="0" condition="skin.hastheme(classic)">Conditional</animation>
        </control>
    </include>
    
    <!-- Power button -->
	<include name="PowerButton">
		<control type="button" id="2">
			<description>powerbutton</description>
			<posx>930</posx>
			<bottom>20</bottom>
			<width>60</width>
			<height>60</height>
			<onup>300</onup>
			<onright>300</onright>
			<onleft>300</onleft>
			<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">common/shutdown2.png</texturefocus>
			<texturenofocus colordiffuse="white">common/shutdown2.png</texturenofocus>
			<onclick>ActivateWindow(111)</onclick>
			<onfocus>ActivateWindow(111)</onfocus>
			<include>animation_fade_visible_hidden</include>
			<visible allowhiddenfocus="true">![[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + [Skin.String(HomeLayout, 1small) | Skin.String(HomeLayout, 2small) | Skin.String(HomeLayout, 1) | Skin.String(HomeLayout, 2) | Skin.String(HomeLayout, simplehor)]] + !Control.IsVisible(4446) + !system.getbool(lookandfeel.enablerssfeeds) + !Skin.HasSetting(HidePowerMenu)</visible>

			<animation effect="slide" end="0,-33" time="0" condition="skin.hastheme(classic) + ![Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles)]">Conditional</animation>
			<animation effect="slide" end="-610" time="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles)]">Conditional</animation>
            <animation effect="slide" end="0,15" time="0" condition="Skin.String(HomeLayout, enhanced)">Conditional</animation>
			<!-- <visible allowhiddenfocus="true">[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles)] + Skin.HasSetting(VerticalHomeInlineSubmenu)</visible> -->
		</control>
	</include>
    
    <include name="Header">
    
        <!-- touchscreen workaround for windows tablets -->
		<include condition="Skin.HasSetting(EnableTouchSupport)">TouchScreenWorkaround</include>
        
        <!-- Snow Effect Expansion -->
		<control type="group">
            <include condition="Skin.HasSetting(enablesnow) + Skin.HasSetting(expandsnow)">snow</include>
		</control>
		
		<!-- PVR recording icon -->
		<control type="image">
			<posx>887</posx>
			<posy>0</posy>
			<width>146</width>
			<height>37</height>
			<texture>home/basichome_isrecording_bg.png</texture>
			<visible>Pvr.IsRecording + window.isactive(home)</visible>
		</control>
        
        <include condition="Window.IsActive(Home) + ![Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(homelayout,win10)]">HeaderLogo</include>
		
        <control type="group">
            <visible>![!Window.IsActive(Home) + Skin.HasSetting(DisableHeader)] + !Control.IsVisible(507)</visible>
            <control type="group">
                <!-- normal header -->
                <visible>!Skin.HasSetting(CompactHeader)</visible>
                <include>HeaderNormal</include>
                <include>TimeInfo</include>
                <include condition="Window.IsActive(Home)">ProfileInfo</include>
                <include>WeatherInfo</include>
            </control>
            <control type="group">
                <visible>Skin.HasSetting(CompactHeader)</visible>
                <include>HeaderCompact</include>
            </control>
        </control>
    </include>
    
    <include name="HeaderCompact">
        <!-- menu buttons -->
        <control type="grouplist" id="5555">
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888) + !Control.IsVisible(882)</visible>
            <visible>!Window.IsActive(Home) | Skin.String(homelayout,win10)</visible>
            <include>animation_fade_visible_hidden</include>		
            <orientation>horizontal</orientation>
            <itemgap>25</itemgap>
            <posx>50</posx>
            <top>20</top>
            <onright>890</onright>
            <ondown>9000</ondown>
            <onup>9000</onup>
            <control type="radiobutton" id="99223">
                <width>60</width>
                <height>60</height>
                <font>-</font>
                <selected>Control.HasFocus(99223)</selected>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/menu.png</textureradiofocus>
                <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">common/menu.png</textureradionofocus>
                <radiowidth>60</radiowidth>
                <radioheight>60</radioheight>
                <onclick condition="!StringCompare(Window(Home).Property(ShowViewSubMenu),show) + [Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">SetProperty(ShowViewSubMenu, show, Home)</onclick>
                <onclick condition="StringCompare(Window(Home).Property(ShowViewSubMenu),show) + [Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">ClearProperty(ShowViewSubMenu, Home)</onclick>
                <onclick condition="[Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">SetFocus(300)</onclick>
                <onclick condition="![Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">SetFocus(4444)</onclick>
                <visible>!Skin.String(HomeLayout,enhanced) + !Skin.String(HomeLayout,simplehor)</visible>
                <visible>Skin.HasSetting(EnableTouchSupport) | [Skin.String(homelayout,win10) + Window.IsActive(Home)]</visible>
                <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888)</visible>
            </control>
            <control type="radiobutton" id="99227">
                <width>60</width>
                <height>60</height>
                <font>-</font>
                <selected>Control.HasFocus(99227)</selected>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">touchcontrols/widget.png</textureradiofocus>
                <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">touchcontrols/widget.png</textureradionofocus>
                <radiowidth>50</radiowidth>
                <radioheight>50</radioheight>
                <onclick condition="StringCompare(Window(Home).Property(ShowWidget),show)">Control.SetFocus(300)</onclick>
                <onclick condition="!StringCompare(Window(Home).Property(ShowWidget),show)">SetProperty(ShowWidget, show, Home)</onclick>
                <onclick condition="StringCompare(Window(Home).Property(ShowWidget),show)">ClearProperty(ShowWidget, Home)</onclick>
                <visible>Window.IsActive(Home) + [Skin.String(HomeLayout,1) | Skin.String(HomeLayout,2) | Skin.String(HomeLayout,1small) | Skin.String(HomeLayout,2small)] </visible>
                <visible>!IsEmpty(Container(300).ListItem.Property(widget))</visible>
                <visible>Skin.HasSetting(EnableTouchSupport)</visible>
                <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888)</visible>
            </control>
             <control type="radiobutton" id="99224">
                <description>powerbutton</description>
                <width>60</width>
                <height>60</height>
                <selected>Control.HasFocus(99224)</selected>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/shutdown2.png</textureradiofocus>
                <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">common/shutdown2.png</textureradionofocus>
                <radiowidth>50</radiowidth>
                <radioheight>50</radioheight>
                <onclick>ActivateWindow(111)</onclick>
                <visible>Skin.HasSetting(EnableTouchSupport) | Skin.String(homelayout,win10)</visible>
                <visible>!Skin.HasSetting(DisablePowerMenu) + Window.IsActive(Home)</visible>
                <visible allowhiddenfocus="true">!Skin.HasSetting(HidePowerMenu)</visible>
            </control>
            <control type="radiobutton" id="99225">
                <description>back button</description>
                <width>60</width>
                <height>60</height>
                <selected>Control.HasFocus(99225)</selected>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">touchcontrols/back.png</textureradiofocus>
                <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">touchcontrols/back.png</textureradionofocus>
                <radiowidth>50</radiowidth>
                <radioheight>50</radioheight>
                <onclick>Back</onclick>
                <onclick>ClearProperty(ShowViewSubMenu, Home)</onclick>
                <onclick>ClearProperty(ShowWidget, Home)</onclick>
                <visible>Skin.HasSetting(EnableTouchSupport) | [Skin.String(homelayout,win10) + Window.IsActive(Home)]</visible>
                <visible>!Window.IsActive(Home) | [Window.IsActive(Home) + Player.HasMedia]</visible>		
            </control>
            <!-- Header -->
            <control type="group" id="99226">
                <visible>!Window.IsActive(Home)</visible>
                <control type="label">
                    <top>-15</top>
                    <align>left</align>
                    <width>800</width>
                    <label>$VAR[value_header]</label>
                    <font>Bold30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <top>15</top>
                    <align>left</align>
                    <width>800</width>
                    <label>$VAR[value_subheader]</label>
                    <font>Reg26</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
            </control>
        
        </control>
            
        <!-- Clock -->
        <control type="group">
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888) + !Control.IsVisible(881)</visible>
            <visible>[Window.IsActive(Home) + !Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile)] | [!Window.IsActive(Home) + !Skin.HasSetting(AlwaysShowWeather)]</visible>
            <control type="label">
                <right>50</right>
                <top>10</top>
                <align>right</align>
                <width>300</width>
                <info>System.Time</info>
                <font>Bold30</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <control type="label">
                <right>50</right>
                <top>40</top>
                <align>right</align>
                <width>500</width>
                <info>System.Date</info>
                <font>Reg26</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
        </control>
         <!--Profile button -->
        <control type="radiobutton" id="890">
            <right>30</right>
            <top>20</top>
            <ondown>9000</ondown>
            <onleft>5555</onleft>
            <width>600</width>
            <height>60</height>
            <radiowidth>60</radiowidth>
            <radioheight>60</radioheight>
            <align>right</align>
            <aligny>center</aligny>
            <font>Reg26</font>
            <label>$VAR[ProfileLabel]</label>
            <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
            <focusedcolor>$INFO[Skin.String(HomeViewDetailsFocusColor)]</focusedcolor>
            <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/profil/avatar.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">common/profil/avatar.png</textureradionofocus>
            <textoffsetx>70</textoffsetx>
            <radioposx>0</radioposx>
            <pulseonselect>false</pulseonselect>
            <texturefocus>-</texturefocus>
            <texturenofocus>-</texturenofocus>
            <onclick>System.LogOff</onclick>
            <selected>Control.HasFocus(890)</selected>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888)</visible>
            <visible>Window.IsActive(Home) + !Skin.HasSetting(WeatherOnHome) + Skin.HasSetting(ShowProfile)</visible>
        </control>
         <!--Weather -->
        <control type="group">
            <visible>[Window.IsActive(Home) + Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile)] | [!Window.IsActive(Home) + Skin.HasSetting(AlwaysShowWeather)]</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888) + !Control.IsVisible(881)</visible>
            <control type="image">
                <right>20</right>
                <top>0</top>
                <texture>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Current.FanartCode)].png</texture>
                <width>100</width>
                <height>100</height>
                <aspectratio>keep</aspectratio>
            </control>
            <!-- time + date -->
            <control type="label">
                <right>130</right>
                <top>5</top>
                <align>right</align>
                <width>400</width>
                <label>[B]$INFO[System.Date], $INFO[System.Time][/B]</label>
                <visible>Weather.IsFetched</visible>
                <font>Reg26</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <!-- weather conditions -->
            <control type="label">
                <right>130</right>
                <top>35</top>
                <align>right</align>
                <width>400</width>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits], $INFO[Window(Weather).Property(Current.Condition)]</label>
                <visible>Weather.IsFetched</visible>
                <font>Reg26</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
        </control>
    </include>
	
	<!--Header-->
    <include name="HeaderNormal">
	
        <control type="group">
            <visible>!Window.IsActive(Home)</visible>
            <visible>!Skin.HasSetting(CompactHeader)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888) + !StringCompare(Window(Home).Property(ShowWidget),show) + !Control.IsVisible(667711)</visible>
            <include>animation_fade_visible_hidden</include>
            <control type="image">
                <visible>skin.hastheme(classic)</visible>
                <posx>61</posx>
                <posy>31</posy>
                <height>64</height>
                <width>64</width>
                <aligny>center</aligny>
                <colordiffuse>$INFO[Skin.String(HeaderTextShadowColor)]</colordiffuse>
                <texture>$VAR[value_header_icon]</texture>
                <visible>!Control.IsVisible(882)</visible>
            </control>
            <control type="image">
                <visible>skin.hastheme(classic)</visible>
                <posx>60</posx>
                <posy>30</posy>
                <height>64</height>
                <width>64</width>
                <aligny>center</aligny>
                <colordiffuse>$INFO[Skin.String(HeaderTextColor)]</colordiffuse>
                <texture>$VAR[value_header_icon]</texture>
                <visible>!Control.IsVisible(882)</visible>
            </control>
            <control type="label">
                <posx>61</posx>
                <posy>0</posy>
                <width min="80" max="1400">auto</width>
                <height>100</height>
                <font>Bold45</font>
                <align>left</align>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <label>$VAR[value_header]</label>
                <visible>!Control.IsVisible(882)</visible>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                <animation effect="slide" end="80,15" time="0" condition="skin.hastheme(classic)">Conditional</animation>
            </control>
             <control type="label">
                <visible>!skin.hastheme(classic)</visible>
                <posy>75</posy>
                <posx>61</posx>
                <width min="0" max="1400">auto</width>
                <height>50</height>
                <label>$VAR[value_subheader]</label>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                <visible>!Control.IsVisible(882)</visible>
            </control>
        </control>

    </include>
    
	<include name="ClearLogo">
		<!--clearlogo top right-->
		<control type="image" id="881">
			<right>60</right>
			<top>10</top>
			<width>550</width>
			<height>90</height>
			<fadetime>600</fadetime>
			<aspectratio align="right" aligny="center">keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
			<visible>!IsEmpty(Control.GetLabel(881)) + Skin.String(ClearLogoLocation, topright)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
			<animation type="Conditional" condition="Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml)">
                <effect type="slide" start="0,0" end="-120,0" time="400" tween="cubic" easing="inout" delay="0" />
            </animation>
		</control>
		
		<!--clearlogo top left-->
		<control type="image" id="882">
			<left>60</left>
			<top>10</top>
			<width>550</width>
			<height>90</height>
			<fadetime>600</fadetime>
			<aspectratio align="left" aligny="center">keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
			<visible>!IsEmpty(Control.GetLabel(882)) + Skin.String(ClearLogoLocation, topleft)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
		</control>
		
		<!--clearlogo top center-->
		<control type="image" id="883">
			<left>760</left>
			<top>10</top>
			<width>400</width>
			<height>90</height>
			<fadetime>600</fadetime>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
			<visible>!IsEmpty(Control.GetLabel(883)) + Skin.String(ClearLogoLocation, topcenter) + !Skin.HasSetting(ShowMovieTitleHeader)</visible>
		</control>
		
		<!--clearlogo footer-->
		<control type="image" id="884">
			<left>810</left>
			<bottom>10</bottom>
			<width>300</width>
			<height>80</height>
			<fadetime>600</fadetime>
			<aspectratio>keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
            <visible>!skin.hassetting(nofooterbar)</visible>
			<visible>!IsEmpty(Control.GetLabel(884)) + Skin.String(ClearLogoLocation, footer) + !skin.hastheme(classic) + !StringCompare(Window(Home).Property(showinfopanel),show)</visible>
		</control>
		
	</include>
	
	<include name="TimeInfo">
		
        <control type="group">
			<visible>!Control.IsVisible(881)</visible>
            <visible>!Skin.HasSetting(CompactHeader)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
            <include>animation_fade_visible_hidden</include>
			<animation type="Conditional" condition="Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml)">
                <effect type="slide" start="0,0" end="-120,0" time="400" tween="cubic" easing="inout" delay="0" />
            </animation>
            <control type="grouplist">
                <!--Time Grouplist Line 1-->
                <posx>1260</posx>
                <posy>0</posy>
                <width>600</width>
                <height>100</height>
                <align>right</align>
                <itemgap>4</itemgap>
                <orientation>horizontal</orientation>
                <usecontrolcoords>true</usecontrolcoords>
				<animation type="Conditional" condition="Skin.HasSetting(EnableTouchSupport) + Control.IsVisible(88888)">
					<effect type="slide" start="0,0" end="0,-20" time="400" tween="cubic" easing="inout" delay="0" />
				</animation>
                <control type="label">
                    <!--Time-->
                    <width min="0" max="300">auto</width>
                    <height>100</height>
                    <info>System.Time(hh:mm)</info>
                    <font>Bold55</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--AM-->
                    <visible>substring(system.time,AM,right)</visible>
                    <width min="0" max="150">auto</width>
                    <height>100</height>
                    <label>378</label>
                    <font>Bold55</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--PM-->
                    <visible>substring(system.time,PM,right)</visible>
                    <width min="0" max="150">auto</width>
                    <height>100</height>
                    <label>379</label>
                    <font>Bold55</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
            </control>
            <control type="grouplist">
                <!--Date Grouplist Line 2-->
                <posx>1260</posx>
                <posy>75</posy>
                <width>600</width>
                <height>50</height>
                <align>right</align>
                <itemgap>4</itemgap>
                <orientation>horizontal</orientation>
                <usecontrolcoords>true</usecontrolcoords>
                <visible>!ControlGroup(400).HasFocus</visible>
				<visible>![Skin.HasSetting(EnableTouchSupport) + Control.IsVisible(88888)]</visible>
                <control type="label">
                    <!--Day-->
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <info>System.Date(DDD)</info>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <label>, </label>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--Date-->
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <info>System.Date(d)</info>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <visible>SubString(System.Language,German)</visible>
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <label>. </label>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <label></label>
                    <visible>!SubString(System.Language,German)</visible>
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--Month-->
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <info>System.Date(MMM)</info>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
					
                </control>
            </control>
        </control>
    
	</include>
    
	<include name="ProfileInfo">
		<control type="group" id="891">
			<animation effect="slide" end="440" time="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles)]">Conditional</animation>
			<defaultcontrol>890</defaultcontrol>
			<posx>60</posx>
			<posy>30</posy>
            <visible>!Skin.HasSetting(CompactHeader)</visible>
            <include>animation_fade_visible_hidden</include>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
			<visible>Skin.HasSetting(ShowProfile)</visible>
            <width>150</width>
			<height>80</height>
			<control type="image">
				<posx>-10</posx>
				<posy>-10</posy>
				<width>170</width>
				<height>130</height>
				<texture diffuse="home/home_matte2.png">colors/color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				
				<visible>!Control.HasFocus(890)</visible>	
			</control>
			<control type="image">
				<posx>-10</posx>
				<posy>-10</posy>
				<width>170</width>
				<height>130</height>
				<texture diffuse="home/home_matte2.png">colors/color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
				
				<visible>Control.HasFocus(890)</visible>	
			</control>
			<control type="image" id="888">	
				<width>150</width>
				<height>80</height>
				<texture fallback="common/profil/avatar.png">$INFO[System.ProfileThumb]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Control.HasFocus(890)</visible>	
			</control>
			<control type="image" id="889">
				<width>150</width>
				<height>80</height>
				<texture fallback="common/profil/avatar.png">$INFO[System.ProfileThumb]</texture>
				<aspectratio>keep</aspectratio>
				<visible>Control.HasFocus(890)</visible>			
			</control>
			<control type="button" id="890">
				<ondown>300</ondown>
				<width>150</width>
				<height>80</height>
				<texturefocus></texturefocus>
				<texturenofocus></texturenofocus>
				<onclick>System.LogOff</onclick>
			</control>
			<control type="label">
				<!--Profile name-->
				<posx>-50</posx>
				<posy>70</posy>
				<width>250</width>
				<height>50</height>
				<label>$VAR[ProfileLabel]</label>
				<align>center</align>
				<font>Reg24</font>
				<textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
			</control>
		</control>
	</include>

	<include name="WeatherInfo">
        <!-- weather info -->
        <control type="group" id="667711">
			<animation effect="slide" end="400" time="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles)] + Window.IsActive(home)">Conditional</animation>
            <posx>30</posx>
            <posy>0</posy>
            <width>350</width>
            <height>300</height>
			<visible>!Control.IsVisible(882)</visible>
            <visible>!Skin.HasSetting(CompactHeader)</visible>
            <visible>Weather.IsFetched</visible>
			<include>animation_fade_visible_hidden</include>
            <visible>[Skin.HasSetting(WeatherOnHome) + Window.IsActive(Home)] | Skin.HasSetting(AlwaysShowWeather)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
            <!--Weather Today-->
            <control type="multiimage">
                <!--Icon-->
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconsExtension]</imagepath>
                <width>125</width>
                <height>125</height>
                <aspectratio align="left" aligny="bottom">keep</aspectratio>
            </control>
            <control type="label">
                <!--Temp-->
                <width>160</width>
                <height>40</height>
                <posx>140</posx>
                <posy>25</posy>
                <font>Bold38</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <align>left</align>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
                <visible>Weather.IsFetched</visible>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <control type="label">
                <!--Temp-->
                <width>400</width>
                <height>40</height>
                <posx>140</posx>
                <posy>70</posy>
                <font>Reg28</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                <align>left</align>
                <label>$INFO[Window(Weather).Property(Current.Condition)]</label>
                <visible>Weather.IsFetched</visible>
            </control>
        </control>
    </include>
    
    <include name="HeaderLogo">
        <!-- Kodi Logo image -->
        <control type="image">
            <posx>35</posx>
            <posy>10</posy>
            <height>110</height>
            <aspectratio align="left">keep</aspectratio>
            <colordiffuse>$INFO[Skin.String(HeaderTextColor)]</colordiffuse>
            <texture>home/kodi_logo_light.png</texture>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
            <visible>!Control.IsVisible(5555) + !Control.IsVisible(891) + !Control.IsVisible(667711)</visible>
            <visible>!Skin.String(CustomLogoImage)</visible>
            <include>animation_fade_visible_hidden</include>
        </control>
        <!-- custom Logo image -->
        <control type="image">
            <posx>35</posx>
            <posy>10</posy>
            <height>110</height>
            <aspectratio align="left">keep</aspectratio>
            <texture>$INFO[Skin.String(CustomLogoImage)]</texture>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
            <visible>!Control.IsVisible(5555) + !Control.IsVisible(891) + !Control.IsVisible(667711)</visible>
            <visible>Skin.String(CustomLogoImage)</visible>
            <include>animation_fade_visible_hidden</include>
        </control>
    </include>
    
    <!--Dailog Color/Font-->
    <include name="DialogHeader">
        <!--Dialog Header-->
        <font>Bold38</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
    </include>
	<include name="DialogHeader_Alt">
        <!--Dialog Header-->
        <font>Bold32</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
    </include>
    <include name="DialogHeader2">
        <!--Dialog Header2 (Yes/No)-->
        <font>Reg36</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
    </include>
    <include name="DialogButton">
        <!--Dialog Button-->
        <font>Reg28</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
		<texturenofocus>dialogs/default/separator.png</texturenofocus>
		<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</texturefocus>
    </include>

    <include name="DialogButtonBig">
        <!--Dialog Button Big-->
        <font>Reg30</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
    <include name="DialogButtonSmall">
        <!--Dialog Button Small-->
        <font>Reg26</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
    <include name="DialogListNF">
        <!--Dialog List NF-->
        <font>Reg28</font>
        <textcolor fallback="white">$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
	
    <include name="DialogListFO">
        <!--Dialog List FO-->
        <font>Reg28</font>
        <textcolor>$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
    </include>

    <include name="DialogLabel">
        <!--Dialog Label-->
        <font>Reg28</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>

    <include name ="textcolorworkaround">
        <!--hardcoded colors for use in some controls (edit for example) that didn't support dynamic coloring pre Kodi 15.2 -->
        <textcolor>white</textcolor>
        <disabledcolor>grey</disabledcolor>
        <focusedcolor>white</focusedcolor>
        <shadowcolor>black</shadowcolor>
    </include>
	
	<include name="DialogButtonOther">
        <!--Dialog Button OK Cancel-->
        <height>80</height>
        <width>350</width>
        <include>Key</include>
    </include>

    <!--Keyboard-->
    <include name="EditTextKeyboard">
        <font>Light45</font>
        <align>center</align>
        <textoffsetx>0</textoffsetx>
        <texturenofocus>-</texturenofocus>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</texturefocus>
    </include>
    <include name="KeyBoardKey">
        <height>70</height>
        <width>130</width>
        <align>center</align>
        <font>Reg30</font>
        <textoffsetx>0</textoffsetx>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
        <textcolor>$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="15">dialogs/keyboard/key.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" border="15">dialogs/keyboard/key.png</texturenofocus>
     </include>
    <include name="KeyBoardKeyRadio">
        <align>left</align>
        <textoffsetx>20</textoffsetx>
        <radioposx>-</radioposx>
        <radioposy>15</radioposy>
        <radiowidth>28</radiowidth>
        <radioheight>28</radioheight>
        <textureradiofocus>dialogs/keyboard/radio-on.png</textureradiofocus>
        <textureradionofocus>dialogs/keyboard/radio-off.png</textureradionofocus>
        <font>Reg26</font>
        <include>KeyBoardKey</include>
    </include>
    
    <include name="Key">
        <height>110</height>
        <align>center</align>
        <font>Reg28</font>
        <textoffsetx>0</textoffsetx>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
        <textcolor>$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="20">dialogs/keyboard/key-nf.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" border="20">dialogs/keyboard/key-nf.png</texturenofocus>
    </include>
    <include name="SmallKey">
        <width>130</width>
        <font>Reg34</font>
        <include>Key</include>
    </include>
	<include name="ExtraSmallKey">
        <width>90</width>
		<height>90</height>
        <include>Key</include>
    </include>
    <include name="BigKey">
        <width>250</width>
        <font>Reg28</font>
        <include>Key</include>
    </include>
    <include name="SpaceBar">
        <width>735</width>
        <include>Key</include>
    </include>
    <include name="BackSpace">
        <width>490</width>
        <include>Key</include>
    </include>
    <include name="DialogButtonBrowseAdd">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/plus.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/keyboard/plus.png</textureradionofocus>
        <radiowidth>30</radiowidth>
        <radioheight>30</radioheight>
        <radioposx>10</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="DialogButtonBrowseRemove">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/remove.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/keyboard/remove.png</textureradionofocus>
        <radiowidth>30</radiowidth>
        <radioheight>30</radioheight>
        <radioposx>10</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="DialogButtonBrowseEdit">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/edit.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/keyboard/edit.png</textureradionofocus>
        <radiowidth>30</radiowidth>
        <radioheight>30</radioheight>
        <radioposx>10</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="DialogButtonBrowse">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/mediasource/browse-nf.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/mediasource/browse-nf.png</textureradionofocus>
        <radiowidth>230</radiowidth>
        <radioheight>230</radioheight>
        <radioposx>-5</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="KeyLeft">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/left.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/left.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="KeyRight">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/right.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/right.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="KeyBack">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/back.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/back.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="KeyDone">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/done.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/done.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="DoubleKeyDone">
        <width>250</width>
        <height>90</height>
        <include>Key</include>
    </include>
    <include name="DoubleKeyCancel">
        <width>250</width>
        <height>90</height>
        <include>Key</include>
    </include>
    <include name="ListDetailsBtn">
        <width>580</width>
        <height>40</height>
        <align>left</align>
        <disabledcolor fallback="white">$INFO[Skin.String(ViewDetailsTextColor)]</disabledcolor>
        <texturefocus>-</texturefocus>
        <texturenofocus>dialogs/default/separator.png</texturenofocus>
        <textoffsetx>0</textoffsetx>
        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
        <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
        <enable>false</enable>
    </include>

    <include name="navigation_horizontal">
        <orientation>horizontal</orientation>
    </include>
    
    <include name="align_right">
        <align>right</align>
    </include>
    
    <include name="SliderEx">
        <!-- fake sliderex control -->
        <control type="group" id="$PARAM[id]">
            <width>$PARAM[width]</width>
            <height>60</height>
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(ButtonColor)]</colordiffuse>
                <visible>!Control.HasFocus($PARAM[sliderid])</visible>
            </control>
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
                <visible>Control.HasFocus($PARAM[sliderid])</visible>
            </control>
            <control type="slider" id="$PARAM[sliderid]">
                <width>200</width>
                <right>140</right>
                <posy>20</posy>
                <onup>$PARAM[upaction]</onup>
                <ondown>$PARAM[downaction]</ondown>
            </control>
            <control type="label">
                <description>Label 1 (left side)</description>
                <label>$PARAM[label]</label>
                <posx>20</posx>
                <align>left</align>
                <font>Light28</font>
                <textcolor fallback="white">$INFO[Skin.String(ButtonTextColor)]</textcolor>
                <visible>!Control.HasFocus($PARAM[sliderid])</visible>
            </control>
            <control type="label">
                <description>Label 2 (right side)</description>
                <label>$PARAM[label2]</label>
                <right>20</right>
                <width>100</width>
                <align>center</align>
                <font>Light28</font>
                <textcolor fallback="white">$INFO[Skin.String(ButtonTextColor)]</textcolor>
                <visible>!Control.HasFocus($PARAM[sliderid])</visible>
            </control>
            <control type="label">
                <description>Label 1 (left side) FOCUS</description>
                <label>$PARAM[label]</label>
                <posx>20</posx>
                <align>left</align>
                <font>Light28</font>
                <textcolor fallback="white">$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
                <visible>Control.HasFocus($PARAM[sliderid])</visible>
            </control>
            <control type="label">
                <description>Label 2 (right side) FOCUS</description>
                <label>$PARAM[label2]</label>
                <right>20</right>
                <width>100</width>
                <align>center</align>
                <font>Light28</font>
                <textcolor fallback="white">$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
                <visible>Control.HasFocus($PARAM[sliderid])</visible>
            </control>
        </control>
    </include>
    		
</includes>