<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>
    <include name="View_51_BigList">
	
		<control type="group">
			<defaultcontrol always="true">51</defaultcontrol>
			<visible>Control.IsVisible(51) + IntegerGreaterThan(Container.NumItems,0)</visible>
			<include>animation_view_change</include>
			
			<include condition="skin.hastheme(classic)">ClassicDetailsPanel4</include>
		
			<control type="panel" id="51">
				<posx>55</posx>
				<posy>240</posy>
				<width>1400</width>
				<height>690</height>
				<onup>51</onup>
				<ondown>51</ondown>
				<onleft>9000</onleft>
				<onright>Skin.ToggleSetting(BigListViewShowInfo)</onright>
				<viewtype label="Big List">wrap</viewtype>
				<orientation>vertical</orientation>
				<pagecontrol>60</pagecontrol>
				<scrolltime tween="cubic" easing="out">600</scrolltime>
				<preloaditems>2</preloaditems>

				<itemlayout width="1312" height="138" condition="[!Skin.HasSetting(BigListViewShowInfo) | [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]]  + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">		
					<control type="group">
						<posy>3</posy>
						<!--background image-->
						<control type="image">
							<posx>0</posx>
							<posy>0</posy>
							<width>1312</width>
							<height>136</height>
							<texture>colors/color_white.png</texture>
							<colordiffuse>$VAR[panel_color]</colordiffuse>
							<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
							<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
							<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
							<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
							<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
						</control>
						<!--mini poster-->
						<control type="image">
							<posx>15</posx>
							<posy>10</posy>
							<width>100</width>
							<height>110</height>
							<texture border="0">$VAR[PosterThumb]</texture>
							<aspectratio align="left" aligny="center">keep</aspectratio>
						</control>
						<!--Title-->
						<control type="label">
							<posx>140</posx>
							<posy>0</posy>
							<height>60</height>
							<align>left</align>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<font>Reg36</font>
						</control>
						<!--Details-->
						<control type="label">
							<posx>140</posx>
							<posy>60</posy>
							<height>60</height>
							<align>left</align>
							<label>$VAR[Details]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<font>Light32</font>
						</control>
						
						<control type="image">
							<!--Watched Overlay-->
							<right>0</right>
							<width>80</width>
							<height>80</height>
							<colordiffuse>ccFFFFFF</colordiffuse>
							<texture>$VAR[WatchedImage]</texture>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label helix-->
							<right>5</right>
							<top>-10</top>
							<width>100</width>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light22</font>
							<textcolor>white</textcolor>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>SubString(System.BuildVersion,14,left) | SubString(System.BuildVersion,15,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label Gotham-->
							<right>-45</right>
							<width>50</width>
							<posy>-10</posy>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light20</font>
							<textcolor>white</textcolor>
							<visible>!Skin.HasSetting(HideWatchedOverlayBigPanel)</visible>
							<visible>SubString(System.BuildVersion,13,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
					</control>

				</itemlayout>
				<focusedlayout width="1312" height="138" condition="[!Skin.HasSetting(BigListViewShowInfo) | [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<control type="group">
						<posy>3</posy>
						<control type="image">
							<posx>0</posx>
							<posy>0</posy>
							<width>1312</width>
							<height>136</height>
							<texture>colors/color_white.png</texture>
							<colordiffuse>$VAR[panel_color]</colordiffuse>
							<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
							<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
							<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
							<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
							<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
						</control>
						
						<control type="image">
							<!--Slider-->
							<posx>0</posx>
							<posy>-2</posy>
							<width>1200</width>
							<height>134</height>
							<texture>views/view_50_slider_big.png</texture>
						</control>

						<!--mini poster-->
						<control type="image">
							<posx>15</posx>
							<posy>10</posy>
							<width>100</width>
							<height>110</height>
							<texture border="0">$VAR[PosterThumb]</texture>
							<aspectratio align="left" aligny="center">keep</aspectratio>
						</control>
						<!--Title-->
						<control type="label">
							<posx>140</posx>
							<posy>0</posy>
							<height>60</height>
							<align>left</align>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsFocusShadowColor)]</shadowcolor>
							<font>Reg36</font>
						</control>
						<!--Details-->
						<control type="label">
							<posx>140</posx>
							<posy>60</posy>
							<height>60</height>
							<align>left</align>
							<label>$VAR[Details]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<font>Light32</font>
						</control>
						<control type="image">
							<!--Watched Overlay-->
							<right>0</right>
							<width>80</width>
							<height>80</height>
							<colordiffuse>ccFFFFFF</colordiffuse>
							<texture>$VAR[WatchedImage]</texture>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label helix-->
							<right>5</right>
							<top>-10</top>
							<width>100</width>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light22</font>
							<textcolor>white</textcolor>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>SubString(System.BuildVersion,14,left) | SubString(System.BuildVersion,15,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label Gotham-->
							<right>-45</right>
							<width>50</width>
							<posy>-10</posy>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light20</font>
							<textcolor>white</textcolor>
							<visible>!Skin.HasSetting(HideWatchedOverlayBigPanel)</visible>
							<visible>SubString(System.BuildVersion,13,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
					</control>
					

				</focusedlayout>
				
				<itemlayout width="962" height="138" condition="[Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">		
					<control type="group">
						<posy>3</posy>
						<!--background image-->
						<control type="image">
							<posx>0</posx>
							<posy>0</posy>
							<width>962</width>
							<height>136</height>
							<texture>colors/color_white.png</texture>
							<colordiffuse>$VAR[panel_color]</colordiffuse>
							<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
							<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
							<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
							<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
							<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
						</control>
						<!--mini poster-->
						<control type="image">
							<posx>15</posx>
							<posy>10</posy>
							<width>100</width>
							<height>110</height>
							<texture border="0">$VAR[PosterThumb]</texture>
							<aspectratio align="left" aligny="center">keep</aspectratio>
						</control>
						<!--Title-->
						<control type="label">
							<posx>140</posx>
							<posy>0</posy>
							<height>60</height>
							<align>left</align>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<font>Reg36</font>
						</control>
						<!--Details-->
						<control type="label">
							<posx>140</posx>
							<posy>60</posy>
							<height>60</height>
							<align>left</align>
							<label>$VAR[Details]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<font>Light32</font>
						</control>
						
						<control type="image">
							<!--Watched Overlay-->
							<right>0</right>
							<width>80</width>
							<height>80</height>
							<colordiffuse>ccFFFFFF</colordiffuse>
							<texture>$VAR[WatchedImage]</texture>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label helix-->
							<right>5</right>
							<top>-10</top>
							<width>100</width>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light22</font>
							<textcolor>white</textcolor>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>SubString(System.BuildVersion,14,left) | SubString(System.BuildVersion,15,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label Gotham-->
							<right>-45</right>
							<width>50</width>
							<posy>-10</posy>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light20</font>
							<textcolor>white</textcolor>
							<visible>!Skin.HasSetting(HideWatchedOverlayBigPanel)</visible>
							<visible>SubString(System.BuildVersion,13,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
					</control>

				</itemlayout>
				<focusedlayout width="962" height="138" condition="[Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<control type="group">
						<posy>3</posy>
						<control type="image">
							<posx>0</posx>
							<posy>0</posy>
							<width>962</width>
							<height>136</height>
							<texture>colors/color_white.png</texture>
							<colordiffuse>$VAR[panel_color]</colordiffuse>
							<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
							<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
							<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
							<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
							<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
						</control>
						
						<control type="image">
							<!--Slider-->
							<posx>0</posx>
							<posy>-2</posy>
							<width>950</width>
							<height>134</height>
							<texture>views/view_50_slider_big.png</texture>
						</control>
						<!--mini poster-->
						<control type="image">
							<posx>15</posx>
							<posy>10</posy>
							<width>100</width>
							<height>110</height>
							<texture border="0">$VAR[PosterThumb]</texture>
							<aspectratio align="left" aligny="center">keep</aspectratio>
						</control>
						<!--Title-->
						<control type="label">
							<posx>140</posx>
							<posy>0</posy>
							<height>60</height>
							<align>left</align>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsFocusShadowColor)]</shadowcolor>
							<font>Reg36</font>
						</control>
						<!--Details-->
						<control type="label">
							<posx>140</posx>
							<posy>60</posy>
							<height>60</height>
							<align>left</align>
							<label>$VAR[Details]</label>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<font>Light32</font>
						</control>
						<control type="image">
							<!--Watched Overlay-->
							<right>0</right>
							<width>80</width>
							<height>80</height>
							<colordiffuse>ccFFFFFF</colordiffuse>
							<texture>$VAR[WatchedImage]</texture>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label helix-->
							<right>5</right>
							<top>-10</top>
							<width>100</width>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light22</font>
							<textcolor>white</textcolor>
							<visible>![[container.content(tvshows) | container.content(seasons)] + !StringCompare(ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>SubString(System.BuildVersion,14,left) | SubString(System.BuildVersion,15,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
						<control type="label">
							<!--watched label Gotham-->
							<right>-45</right>
							<width>50</width>
							<posy>-10</posy>
							<align>right</align>
							<label>$VAR[WatchedLabel]</label>
							<font>Light20</font>
							<textcolor>white</textcolor>
							<visible>!Skin.HasSetting(HideWatchedOverlayBigPanel)</visible>
							<visible>SubString(System.BuildVersion,13,left)</visible>
							<visible>!skin.hastheme(classic) | [skin.hastheme(classic) + StringCompare(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable]</visible>
						</control>
					</control>
					

				</focusedlayout>

				<itemlayout height="170" width="857" condition="[Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
                    <control type="group">
					<posy>10</posy>
					<posx>5</posx>
					<animation effect="fade" reversible="false" end="60" time="0" condition="true">Conditional</animation>
					<control type="image">
                        <!--Banner-->
                        <width>847</width>
                        <height>160</height>
                        <texture fallback="special://skin/extras/defaulticonswide/DefaultVideo.png">$VAR[BannerImage]</texture>
                        <aspectratio align="center" aligny="center">stretch</aspectratio>
						<visible>!IsEmpty(ListItem.Art(banner)) | !IsEmpty(ListItem.Art(tvshow.banner))</visible>
                    </control>
					<control type="image">
                        <!--Banner fallback-->
                        <width>847</width>
                        <height>160</height>
                        <texture fallback="special://skin/extras/defaulticonswide/DefaultVideo.png">$VAR[BannerImageFallback]</texture>
                        <aspectratio align="center" aligny="center">scale</aspectratio>
						<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
                    </control>
					<control type="image">
						<left>0</left>
						<top>12</top>
						<width>847</width>
						<height>140</height>
						<aspectratio scalediffuse="false" align="center">keep</aspectratio>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
					</control>
					<control type="label">
						<top>0</top>
						<width>847</width>
						<height>160</height>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<font>Bold40</font>
						<shadowcolor>black</shadowcolor>
						<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner)) + IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
                    <control type="image">
						<!--Watched Overlay-->
						<right>5</right>
						<posy>0</posy>
						<width>95</width>
						<height>95</height>
						<colordiffuse>ccFFFFFF</colordiffuse>
						<texture>$VAR[WatchedImageBanner]</texture>
						<visible>!Skin.HasSetting(HideWatchedOverlayBanner)</visible>
					</control>
					<control type="label">
						<!--watched label-->
						<right>10</right>
						<posy>0</posy>
						<width>50</width>
						<height>60</height>
						<font>Reg24</font>
						<align>right</align>
						<label>$VAR[WatchedLabel]</label>
						<textcolor>white</textcolor>
						<visible>!Skin.HasSetting(HideWatchedOverlayBanner)</visible>
					</control>
					</control>
                </itemlayout>
                <focusedlayout height="170" width="857" condition="[Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
				<control type="group">
					<posy>10</posy>
					<posx>5</posx>
					<!--background image-->
					<control type="image">
                        <!--focus image-->
                        <width>847</width>
                        <height>160</height>
						<bordersize>-6</bordersize>
                        <texture>colors/color_white.png</texture>
                        <aspectratio align="center" aligny="center">stretch</aspectratio>
						<colordiffuse>$INFO[Skin.String(ViewDetailsFocusColor)]</colordiffuse>
                    </control>
					<control type="image">
                        <!--Banner-->
                        <width>847</width>
                        <height>160</height>
                        <texture fallback="special://skin/extras/defaulticonswide/DefaultVideo.png">$VAR[BannerImage]</texture>
                        <aspectratio align="center" aligny="center">stretch</aspectratio>
						<visible>!IsEmpty(ListItem.Art(banner)) | !IsEmpty(ListItem.Art(tvshow.banner))</visible>
                    </control>
					<control type="image">
                        <!--Banner fallback-->
                        <width>847</width>
                        <height>160</height>
                        <texture fallback="special://skin/extras/defaulticonswide/DefaultVideo.png">$VAR[BannerImageFallback]</texture>
                        <aspectratio align="center" aligny="center">scale</aspectratio>
						<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
                    </control>
					<control type="image">
						<left>0</left>
						<top>12</top>
						<width>847</width>
						<height>140</height>
						<aspectratio scalediffuse="false" align="center">keep</aspectratio>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
					</control>
					<control type="label">
						<top>0</top>
						<width>847</width>
						<height>160</height>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<font>Bold40</font>
						<shadowcolor>black</shadowcolor>
						<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner)) + IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
                    <control type="image">
						<!--Watched Overlay-->
						<right>5</right>
						<posy>0</posy>
						<width>95</width>
						<height>95</height>
						<colordiffuse>ccFFFFFF</colordiffuse>
						<texture>$VAR[WatchedImageBanner]</texture>
						<visible>!Skin.HasSetting(HideWatchedOverlayBanner)</visible>
					</control>
					<control type="label">
						<!--watched label-->
						<right>10</right>
						<posy>0</posy>
						<width>50</width>
						<height>60</height>
						<font>Reg24</font>
						<align>right</align>
						<label>$VAR[WatchedLabel]</label>
						<textcolor>white</textcolor>
						<visible>!Skin.HasSetting(HideWatchedOverlayBanner)</visible>
					</control>
				</control>
				
                </focusedlayout>
			
			</control>
			
			<!--pvr info-->
			<control type="group">
				<visible>[Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]</visible>
				<control type="image">
					<posx>1373</posx>
					<posy>242</posy>
					<height>688</height>
					<width>487</width>
					<texture>colors/color_white.png</texture>
					<colordiffuse>$VAR[panel_color]</colordiffuse>
					<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
					<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
					<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
					<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
					<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				</control>
				<control type="image">
					<right>85</right>
					<posy>240</posy>
					<width>440</width>
					<height>280</height>
					<border>5</border>
					<texture>$INFO[ListItem.Thumb]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>Window.IsActive(tvrecordings)</visible>
				</control>
				<control type="textbox">
					<right>85</right>
					<posy>510</posy>
					<width>430</width>
					<height>400</height>
					<label>$VAR[Plots]</label>
					<font>Light30</font>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<aligny>top</aligny>
					<visible>Window.IsActive(tvrecordings)</visible>
				</control>
				<control type="textbox">
					<right>65</right>
					<posy>250</posy>
					<width>430</width>
					<height>660</height>
					<label>$VAR[Plots]</label>
					<font>Light30</font>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<aligny>top</aligny>
					<visible>!Window.IsActive(tvrecordings)</visible>
				</control>
			</control>
			
			<!--normal info-->
			<control type="group">
				<animation effect="slide" start="0,0" end="500,0" tween="cubic" easing="inout" time="250" delay="0" condition="!Skin.HasSetting(BigListViewShowInfo)">"Conditional</animation>
				<visible>![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]</visible>
				<control type="image">
					<right>60</right>
					<posy>242</posy>
					<height>688</height>
					<width>350</width>
					<texture>colors/color_white.png</texture>
					<colordiffuse>$VAR[panel_color]</colordiffuse>
					<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
					<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
					<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
					<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
					<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				</control>
				
				<control type="textbox">
					<right>65</right>
					<posy>250</posy>
					<width>330</width>
					<height>660</height>
					<label>$VAR[Plots]</label>
					<font>Light30</font>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<aligny>top</aligny>
				</control>
			</control>
		
			<!--large poster-->
			<control type="group">
				<visible>![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]</visible>
				<animation effect="slide" start="0,0" end="-350,0" tween="cubic" easing="inout" time="250" delay="0" condition="Skin.HasSetting(BigListViewShowInfo)">"Conditional</animation>
				<control type="image">
					<posx>1373</posx>
					<posy>242</posy>
					<height>688</height>
					<width>487</width>
					<texture>colors/color_white.png</texture>
					<colordiffuse>$VAR[panel_color]</colordiffuse>
					<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
					<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
					<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
					<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
					<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				</control>
				<control type="image">
					<!--cdart image-->
					<right>85</right>
					<posy>250</posy>
					<width>462</width>
					<height>668</height>
					<texture background="true">$INFO[ListItem.Art(discart)]</texture>
					<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
					<animation effect="slide" start="0,0" end="-210,0" tween="cubic" easing="inout" time="1200" delay="600">Visible</animation>
					<animation effect="fade" start="0" end="100" delay="600" time="800" pulse="false">Visible</animation>
					<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="Skin.HasSetting(AnimateDiscArt)">Conditional</animation>
					<visible>!IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(View51_ShowCDart)</visible>
				</control>
				<control type="image">
					<right>45</right>
					<posy>235</posy>
					<width>522</width>
					<height>708</height>
					<border>5</border>
					<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
					<texture background="true" diffuse="poster_matte.png" fallback="DefaultVideo.png">$VAR[PosterThumb]</texture>
					<bordertexture border="20" colordiffuse="black">thumb_shadow.png</bordertexture>
					<bordersize>20</bordersize>
				</control>
			</control>
			
			 <!--vertical Scollbar-->
			<control type="group">
				<visible>Control.IsVisible(51)</visible>
				<visible>!Window.IsActive(DialogVideoInfo.xml)</visible>
				<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
				<control type="scrollbar" id="60">
					<visible>Control.IsVisible(51)</visible>
					<right>0</right>
					<posy>245</posy>
					<width>60</width>
					<height>680</height>
					<onup>60</onup>
					<ondown>60</ondown>
					<onleft>51</onleft>
					<texturesliderbackground border="0,14,0,14">scrollbar/ScrollBarV.png</texturesliderbackground>
					<texturesliderbar border="0,14,0,14">scrollbar/ScrollBarV_bar.png</texturesliderbar>
					<texturesliderbarfocus border="0,14,0,14" colordiffuse="mainblue">scrollbar/ScrollBarV_bar_focus.png</texturesliderbarfocus>
					<textureslidernib>scrollbar/ScrollBarNib.png</textureslidernib>
					<textureslidernibfocus>scrollbar/ScrollBarNib.png</textureslidernibfocus>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
					<animation effect="fade" start="0" end="100" time="400" condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport)]">Conditional</animation>
				</control>
			</control>
    

		</control>
		
	</include>

</includes>