<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>

	<include name="BiglistLayout">

		<!--Title-->
		<control type="label">
			<posx>10</posx>
			<posy>10</posy>
			<height>40</height>
			<align>left</align>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Reg36</font>
			<animation effect="slide" end="90" reversible="false" time="0" condition="Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)">Conditional</animation>
		</control>
		<!--Details-->
		<control type="label">
			<posx>10</posx>
			<posy>50</posy>
			<height>60</height>
			<align>left</align>
			<label>$VAR[ListDetails]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<animation effect="slide" end="90" reversible="false" time="0" condition="Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)">Conditional</animation>
		</control>
		<control type="image">
			<bottom>0</bottom>
			<posy>0</posy>
			<height>1</height>
			<texture>diffuse/panel.png</texture>
			<colordiffuse>grey</colordiffuse>
			<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
		</control>
		<control type="group">
			<visible>![Skin.HasSetting(View51_ShowCDart) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]]</visible>
			<include>WatchedIndicatorNormal</include>
		</control>
		<control type="image">
			<!--live tv icon-->
			<posy>10</posy>
			<left>0</left>
			<width>90</width>
			<height>95</height>
			<colordiffuse>ccFFFFFF</colordiffuse>
			<texture>$VAR[PosterThumb]</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<visible>Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)</visible>
		</control>
		
		<!--Rating-->
		<control type="label">
			<right>0</right>
			<posy>10</posy>
			<height>40</height>
			<width>80</width>
			<align>center</align>
			<label>$INFO[ListItem.Rating]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>!Skin.HasSetting(View51_ShowCDart) + !Skin.HasSetting(BigListViewShowInfo)</visible>
			<visible>Skin.HasSetting(HideWatchedOverlayList) | ![StringCompare(ListItem.Overlay,OverlayWatched.png) | SubString(ListItem.Path,videodb://movies/sets/) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]</visible>
		</control>
		<!--quality-->
		<control type="label">
			<right>0</right>
			<posy>50</posy>
			<height>60</height>
			<width>80</width>
			<align>center</align>
			<label>[B]$VAR[HDIndicator][/B]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>!Skin.HasSetting(View51_ShowCDart) + !Skin.HasSetting(BigListViewShowInfo)</visible>
			<visible>Skin.HasSetting(HideWatchedOverlayList) | ![StringCompare(ListItem.Overlay,OverlayWatched.png) | SubString(ListItem.Path,videodb://movies/sets/) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]</visible>
		</control>
	</include>

    <include name="BigListFocusLayout">
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<height>115</height>
			<texture border="5">diffuse/panel.png</texture>
			<colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
			<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
		</control>
		<!--Title-->
		<control type="label">
			<posx>10</posx>
			<posy>10</posy>
			<height>40</height>
			<align>left</align>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Reg36</font>
			<scroll>true</scroll>
			<animation effect="slide" end="90" reversible="false" time="0" condition="Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)">Conditional</animation>
		</control>
		<!--Details-->
		<control type="label">
			<posx>10</posx>
			<posy>50</posy>
			<height>60</height>
			<align>left</align>
			<label>$VAR[ListDetails]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<scroll>true</scroll>
			<animation effect="slide" end="90" reversible="false" time="0" condition="Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)">Conditional</animation>
		</control>
		<control type="image">
			<bottom>0</bottom>
			<posy>0</posy>
			<height>1</height>
			<texture>diffuse/panel.png</texture>
			<colordiffuse>grey</colordiffuse>
			<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
		</control>
		<control type="group">
			<visible>![Skin.HasSetting(View51_ShowCDart) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]]</visible>
			<include>WatchedIndicatorNormal</include>
		</control>
		<control type="image">
			<!--live tv icon-->
			<posy>10</posy>
			<left>0</left>
			<width>90</width>
			<height>95</height>
			<colordiffuse>ccFFFFFF</colordiffuse>
			<texture>$VAR[PosterThumb]</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<visible>Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)</visible>
		</control>
		
		<!--Rating-->
		<control type="label">
			<right>0</right>
			<posy>10</posy>
			<height>40</height>
			<width>80</width>
			<align>center</align>
			<label>$INFO[ListItem.Rating]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>!Skin.HasSetting(View51_ShowCDart) + !Skin.HasSetting(BigListViewShowInfo)</visible>
			<visible>Skin.HasSetting(HideWatchedOverlayList) | ![StringCompare(ListItem.Overlay,OverlayWatched.png) | SubString(ListItem.Path,videodb://movies/sets/) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]</visible>
		</control>
		<!--quality-->
		<control type="label">
			<right>0</right>
			<posy>50</posy>
			<height>60</height>
			<width>80</width>
			<align>center</align>
			<label>[B]$VAR[HDIndicator][/B]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>!Skin.HasSetting(View51_ShowCDart) + !Skin.HasSetting(BigListViewShowInfo)</visible>
			<visible>Skin.HasSetting(HideWatchedOverlayList) | ![StringCompare(ListItem.Overlay,OverlayWatched.png) | SubString(ListItem.Path,videodb://movies/sets/) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]</visible>
		</control>
		
	</include>
	
	<include name="BiglistSlimLayout">

		<!--Title-->
		<control type="label">
			<posx>10</posx>
			<align>left</align>
			<width>65%</width>
			<label>[B]$INFO[ListItem.Label][/B]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light30</font>
		</control>
		
		<!--quality-->
		<control type="label">
			<right>5</right>
			<width>80</width>
			<align>right</align>
			<label>[B]$VAR[HDIndicator][/B]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>![!Skin.HasSetting(HideWatchedOverlayList) + [StringCompare(ListItem.Overlay,OverlayWatched.png) | SubString(ListItem.Path,videodb://movies/sets/) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]]</visible>
		</control>
			
		<!--Rating-->
		<control type="label">
			<right>80</right>
			<width>80</width>
			<align>center</align>
			<label>$INFO[ListItem.Rating]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>!Skin.HasSetting(BigListViewShowInfo)</visible>
		</control>
		
		
		<!--runtime-->
		<control type="label">
			<right>160</right>
			<width>140</width>
			<align>center</align>
			<label>$INFO[ListItem.Duration]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<visible>!Skin.HasSetting(BigListViewShowInfo)</visible>
			<font>Light28</font>
		</control>
		
		<!--Year-->
		<control type="label">
			<right>320</right>
			<width>110</width>
			<align>center</align>
			<label>$INFO[ListItem.Year]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<visible>!Skin.HasSetting(BigListViewShowInfo)</visible>
			<font>Light28</font>
		</control>
		
		<control type="group">
			<!--Watched Overlay-->
			<visible>![Skin.HasSetting(View51_ShowCDart) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]]</visible>
			<include>WatchedIndicatorSmall</include>
		</control>
		
		<control type="image">
			<bottom>0</bottom>
			<posy>0</posy>
			<height>1</height>
			<texture>diffuse/panel.png</texture>
			<colordiffuse>grey</colordiffuse>
			<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
		</control>
	</include>

    <include name="BigListSlimLayoutFocus">
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<texture border="5">diffuse/panel.png</texture>
			<colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
			<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
		</control>
		<!--Title-->
		<control type="label">
			<posx>10</posx>
			<align>left</align>
			<width>65%</width>
			<label>[B]$INFO[ListItem.Label][/B]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light30</font>
			<scroll>true</scroll>
		</control>
		
		<!--quality-->
		<control type="label">
			<right>5</right>
			<width>80</width>
			<align>right</align>
			<label>[B]$VAR[HDIndicator][/B]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>![!Skin.HasSetting(HideWatchedOverlayList) + [StringCompare(ListItem.Overlay,OverlayWatched.png) | SubString(ListItem.Path,videodb://movies/sets/) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]]</visible>
		</control>
			
		<!--Rating-->
		<control type="label">
			<right>80</right>
			<width>80</width>
			<align>center</align>
			<label>$INFO[ListItem.Rating]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<font>Light28</font>
			<visible>!Skin.HasSetting(BigListViewShowInfo)</visible>
		</control>
		
		
		<!--runtime-->
		<control type="label">
			<right>160</right>
			<width>140</width>
			<align>center</align>
			<label>$INFO[ListItem.Duration]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<visible>!Skin.HasSetting(BigListViewShowInfo)</visible>
			<font>Light28</font>
		</control>
		
		<!--Year-->
		<control type="label">
			<right>320</right>
			<width>110</width>
			<align>center</align>
			<label>$INFO[ListItem.Year]</label>
			<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
			<visible>!Skin.HasSetting(BigListViewShowInfo)</visible>
			<font>Light28</font>
		</control>
		
		<control type="group">
			<!--Watched Overlay-->
			<visible>![Skin.HasSetting(View51_ShowCDart) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]]</visible>
			<include>WatchedIndicatorSmall</include>
		</control>
		
		<control type="image">
			<bottom>0</bottom>
			<posy>0</posy>
			<height>1</height>
			<texture>diffuse/panel.png</texture>
			<colordiffuse>grey</colordiffuse>
			<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
		</control>
	</include>
	
	<include name="BigListBannerLayout">
	<control type="group">
		<width>830</width>
		<height>165</height>
		<control type="image">
			<!--Banner-->
			<bordersize>8</bordersize>
			<texture fallback="special://skin/extras/defaulticonswide/DefaultVideo.png">$VAR[BannerImage]</texture>
			<aspectratio align="center" aligny="center">stretch</aspectratio>
			<visible>!IsEmpty(ListItem.Art(banner)) | !IsEmpty(ListItem.Art(tvshow.banner))</visible>
		</control>
		<control type="image">
			<!--Banner fallback-->
			<bordersize>8</bordersize>
			<texture fallback="special://skin/extras/defaulticonswide/DefaultVideo.png">$VAR[BannerImageFallback]</texture>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
		</control>
		<control type="image">
			<bordersize>8</bordersize>
			<aspectratio scalediffuse="false" align="center">keep</aspectratio>
			<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
			<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
		</control>
		<control type="label">
			<align>center</align>
			<aligny>center</aligny>
			<label>$INFO[ListItem.Label]</label>
			<font>Bold40</font>
			<shadowcolor>black</shadowcolor>
			<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner)) + IsEmpty(ListItem.Art(clearlogo))</visible>
		</control>
		<control type="group">
			<top>8</top>
			<right>8</right>
			<include>WatchedIndicatorNormal</include>
		</control>
	</control>
	</include>
	
	<include name="View_51_BigList">
	
		<control type="group">
			<defaultcontrol always="true">51</defaultcontrol>
			<visible>Control.IsVisible(51) + IntegerGreaterThan(Container.NumItems,0)</visible>
			<include>animation_view_change</include>
			<height>730</height>
			<bottom>125</bottom>
			<!-- Background Panel-->
			<control type="image">
				<posx>50</posx>
				<width>1820</width>
				<texture border="15">diffuse/bgpanel.png</texture>
				<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
				<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
				<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
				<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
				<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
				<visible>!Skin.HasSetting(View51_HidePanel)</visible>
			</control>
			
			<!-- Background Panel-->
			<control type="image">
				<right>50</right>
				<width>500</width>
				<texture border="15">diffuse/bgpanel.png</texture>
				<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
				<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
				<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
				<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
				<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
				<visible>!Skin.HasSetting(View51_HidePanel) + Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]</visible>
			</control>
			<control type="image">
				<right>50</right>
				<width>850</width>
				<texture border="15">diffuse/bgpanel.png</texture>
				<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
				<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
				<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
				<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
				<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
				<visible>!Skin.HasSetting(View51_HidePanel) + Skin.HasSetting(BigListViewShowInfo) + [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]</visible>
			</control>
		
			<control type="panel" id="51">
				<posx>55</posx>
				<posy>15</posy>
				<width>1400</width>
				<height>687</height>
				<onup>51</onup>
				<ondown>51</ondown>
				<onleft>9000</onleft>
				<onright>60</onright>
				<viewtype label="31444">list</viewtype>
				<orientation>vertical</orientation>
				<pagecontrol>60</pagecontrol>
				<scrolltime tween="cubic" easing="out">600</scrolltime>
				<preloaditems>2</preloaditems>
				<visible>!Skin.HasSetting(ForcedViews.Enabled) | 
				[Container.Content(movies) + Skin.String(ForcedViews.movies,None)] | 
				[Container.Content(tvshows) + Skin.String(ForcedViews.tvshows,None)] | 
				[Container.Content(seasons) + Skin.String(ForcedViews.seasons,None)] | 
				[Container.Content(episodes) + Skin.String(ForcedViews.episodes,None)] | 
				[Container.Content(movies) + Skin.String(ForcedViews.movies,None)] | 
				[Container.Content(tvshows) + Skin.String(ForcedViews.tvshows,None)] | 
				[Container.Content(seasons) + Skin.String(ForcedViews.seasons,None)] | 
				[Container.Content(episodes) + Skin.String(ForcedViews.episodes,None)] | 
				[[Container.Content(sets) | StringCompare(Container.Folderpath,videodb://movies/sets/)] + Skin.String(ForcedViews.sets,51)] | 
				[Container.Content(movies) + Skin.String(ForcedViews.movies,51) + !substring(Container.FolderPath,videodb://movies/sets/,left)] | 
				[Container.Content(movies) + Skin.String(ForcedViews.setmovies,51) + substring(Container.FolderPath,setid=)] | 
				[Container.Content(tvshows) + Skin.String(ForcedViews.tvshows,51)] | 
				[Container.Content(seasons) + Skin.String(ForcedViews.seasons,51)] | 
				[Container.Content(episodes) + Skin.String(ForcedViews.episodes,51)] | 
				[!Container.Content(movies) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(sets)]
				</visible>

				<itemlayout width="1320" height="115" condition="!Skin.HasSetting(View51_UseSlimList) + [!Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]]  + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">		
					<include>BiglistLayout</include>
				</itemlayout>
				<focusedlayout width="1320" height="115" condition="!Skin.HasSetting(View51_UseSlimList) + [!Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<include>BigListFocusLayout</include>
				</focusedlayout>
				
				<itemlayout width="830" height="115" condition="!Skin.HasSetting(View51_UseSlimList) + [Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">		
					<include>BiglistLayout</include>
				</itemlayout>
				<focusedlayout width="830" height="115" condition="!Skin.HasSetting(View51_UseSlimList) + [Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<include>BigListFocusLayout</include>
				</focusedlayout>
				
				
				<itemlayout width="1320" height="62" condition="Skin.HasSetting(View51_UseSlimList) + [!Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]]  + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">		
					<include>BiglistSlimLayout</include>
				</itemlayout>
				<focusedlayout width="1320" height="62" condition="Skin.HasSetting(View51_UseSlimList) + [!Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<include>BigListSlimLayoutFocus</include>
				</focusedlayout>
				
				<itemlayout width="830" height="62" condition="Skin.HasSetting(View51_UseSlimList) + [Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">		
					<include>BiglistSlimLayout</include>
				</itemlayout>
				<focusedlayout width="830" height="62" condition="Skin.HasSetting(View51_UseSlimList) + [Skin.HasSetting(BigListViewShowInfo) + ![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]] + ![Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<include>BigListSlimLayoutFocus</include>
				</focusedlayout>

				
				<itemlayout width="950" height="115" condition="!Skin.HasSetting(View51_UseSlimList) + [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]">		
					<include>BiglistLayout</include>
				</itemlayout>
				<focusedlayout width="950" height="115" condition="!Skin.HasSetting(View51_UseSlimList) + [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]">
					<include>BigListFocusLayout</include>
				</focusedlayout>
				<itemlayout width="950" height="62" condition="Skin.HasSetting(View51_UseSlimList) + [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]">		
					<include>BiglistSlimLayout</include>
				</itemlayout>
				<focusedlayout width="950" height="62" condition="Skin.HasSetting(View51_UseSlimList) + [Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels)]">
					<include>BigListSlimLayoutFocus</include>
				</focusedlayout>

				<itemlayout height="170" width="857" condition="[Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
                    <include>BigListBannerLayout</include>
                </itemlayout>
                <focusedlayout height="170" width="857" condition="[Skin.HasSetting(ListViewShowBanners) + container.content(tvshows)]">
					<control type="group">
						<width>830</width>
						<height>165</height>
						<control type="image">
							<!--Focus background image-->
							<texture border="5">diffuse/panel.png</texture>
							<colordiffuse>$INFO[Skin.String(ViewDetailsFocusColor)]</colordiffuse>
						</control>
						<include>BigListBannerLayout</include>
					</control>
                </focusedlayout>
			
			</control>
			
			<!--pvr info-->
			<control type="group">
				<visible>[Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]</visible>
				
				<control type="image">
					<posx>1033</posx>
					<posy>15</posy>
					<height>470</height>
					<width>825</width>
					<texture background="true" diffuse="home/home_matte2.png">$VAR[BannerLandscapeImage]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>![VideoPlayer.Content(livetv) + Skin.HasSetting(PVRShowPreview)]</visible>
				</control>

				
				<!--Video Window -->
				<control type="videowindow">
					<posx>1033</posx>
					<posy>15</posy>
					<height>470</height>
					<width>825</width>
					<visible>VideoPlayer.Content(livetv) + Skin.HasSetting(PVRShowPreview)</visible>
				</control>
				
				<control type="textbox">
					<posx>1030</posx>
					<posy>485</posy>
					<height>225</height>
					<width>825</width>
					<label>$VAR[Plots]</label>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<aligny>top</aligny>
				</control>
			</control>
			
			<!--normal info-->
			<control type="group">
				<animation effect="slide" start="0,0" end="550,0" tween="cubic" easing="inout" time="250" delay="0" condition="!Skin.HasSetting(BigListViewShowInfo)">"Conditional</animation>
				<visible>![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]</visible>
				
				<!--Info-->
				<control type="grouplist">
					<posx>1385</posx>
					<posy>10</posy>
					<width>470</width>
					<height>683</height>
					<orientation>vertical</orientation>
					<!-- title -->
					<control type="group">
						 <height>40</height>
						<control type="label">
							<posx>7</posx>
							<posy>0</posy>
							<align>left</align>
							<label>[UPPERCASE]$VAR[mediatitle][/UPPERCASE]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsFocusShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
							<scroll>false</scroll>
							<font>Bold30</font>
						</control>
					</control>
					<control type="group">
						<!--Year: Movies-->
						<height>40</height>
						<visible>[Container.Content(Movies) | [Container.Content(sets) | StringCompare(Container.Folderpath,videodb://movies/sets/)]] + !IsEmpty(ListItem.Year)</visible>
						<control type="image">
							<posx>0</posx>
							<posy>3</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/premiered-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Year]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>!SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[Window(Home).Property(MovieSet.Years)]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
					</control>
					<control type="group">
						<!--Premiered: TV-Shows, Episodes-->
						<height>40</height>
						<visible>[Container.Content(TVShows) | Container.Content(episodes) | Container.Content(sets) | StringCompare(Container.Folderpath,videodb://movies/sets/)] + !IsEmpty(ListItem.Premiered)</visible>
						<control type="image">
							<posx>0</posx>
							<posy>3</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/premiered-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Premiered]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
						</control>
					</control>
					<control type="group">
						<!--Runtime: Movie, Episodes-->
						<height>40</height>
						<visible>[Container.Content(Movies) | Container.Content(episodes) | [Container.Content(sets) | StringCompare(Container.Folderpath,videodb://movies/sets/)]] + [!IsEmpty(ListItem.Duration) | !IsEmpty(Window(Home).Property(MovieSet.Runtime))]</visible>
						<control type="image">
							<posx>0</posx>
							<posy>3</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/time-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>!SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[Window(Home).Property(MovieSet.Runtime),, $LOCALIZE[12391]]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
					</control>
					<control type="group">
						<!--Genre-->
						<width>800</width>
						<height>40</height>
						<visible>!IsEmpty(ListItem.Genre) | !IsEmpty(Window(Home).Property(MovieSet.Genre))</visible>
						<control type="image">
							<posx>0</posx>
							<posy>3</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/genre-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Genre]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<visible>!SubString(ListItem.Path,videodb://movies/sets/)</visible>
							<scroll>false</scroll>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[Window(Home).Property(MovieSet.Genre)]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
					</control>
					<control type="group">
						<!--Director: Movies, Episodes-->
						<width>800</width>
						<height>40</height>
						<visible>[Container.Content(Movies) | Container.Content(episodes) | [Container.Content(sets) | StringCompare(Container.Folderpath,videodb://movies/sets/)]] + [!IsEmpty(ListItem.Director) | !IsEmpty(Window(Home).Property(MovieSet.Director))]</visible>
						<control type="image">
							<posx>0</posx>
							<posy>5</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/director-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Director]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>!SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[Window(Home).Property(MovieSet.Director)]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
					</control>
					<control type="group">
						<!--Writer: Movies, Episodes-->
						<width>800</width>
						<height>40</height>
						<visible>[Container.Content(Movies) | Container.Content(episodes) | [Container.Content(sets) | StringCompare(Container.Folderpath,videodb://movies/sets/)]] + [!IsEmpty(ListItem.Writer) | !IsEmpty(Window(Home).Property(MovieSet.Writer))]</visible>
						<control type="image">
							<posx>0</posx>
							<posy>2</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/writer-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Writer]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>!SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[Window(Home).Property(MovieSet.Writer)]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
							<visible>SubString(ListItem.Path,videodb://movies/sets/)</visible>
						</control>
					</control>
					<control type="group">
						<!--Studio: TV-Shows-->
						<width>1200</width>
						<height>40</height>
						<visible>!IsEmpty(ListItem.Studio)</visible>
						<control type="image">
							<posx>0</posx>
							<posy>3</posy>
							<width>49</width>
							<height>49</height>
							<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
							<texture>dialogs/videoinfo/tvstudio-icon.png</texture>
						</control>
						<control type="label">
							<posx>60</posx>
							<posy>0</posy>
							<align>left</align>
							<label>$INFO[ListItem.Studio]</label>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<scroll>false</scroll>
						</control>
					</control>
					<control type="group">
						<height>auto</height>
						<width>470</width>
						<!-- horizontal line -->
						<control type="image">
							<top>10</top>
							<height>1</height>
							<texture>diffuse/panel.png</texture>
							<colordiffuse>grey</colordiffuse>
							<animation effect="fade" reversible="false" end="40" time="0" condition="true">Conditional</animation>
						</control>
						<!-- plot -->
						<control type="textbox">
							<top>10</top>
							<height>auto</height>
							<label>$VAR[Plots]</label>
							<font>Light28</font>
							<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
							<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
							<aligny>top</aligny>
							<autoscroll>true</autoscroll>
						</control>
					</control>
				</control>
            
				
				
			</control>
		
			<!--large poster-->
			<control type="group">
				<visible>![Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(radiochannels) | Window.IsActive(mypvr.xml)]</visible>
				<animation effect="slide" start="0,0" end="-490,0" tween="cubic" easing="inout" time="250" delay="0" condition="Skin.HasSetting(BigListViewShowInfo)">"Conditional</animation>

				<control type="image">
					<!--cdart image-->
					<right>-60</right>
					<posy>-5</posy>
					<width>725</width>
					<height>725</height>
					<bordersize>125</bordersize>
					<texture background="true" diffuse="diffuse/cdmask_big.png" fallback="defaultcovers/cd_big.png">$VAR[VideoDiscArtImage]</texture>
					<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
					<animation effect="slide" start="0,0" end="-210,0" tween="cubic" easing="inout" time="1200" delay="600" condition="Skin.HasSetting(View51_ShowCDart)">Conditional</animation>
					<animation effect="fade" start="0" end="100" delay="600" time="800" pulse="false" condition="Skin.HasSetting(View51_ShowCDart)">Conditional</animation>
					<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="Skin.HasSetting(AnimateDiscArt)">Conditional</animation>
					<visible>Skin.HasSetting(View51_ShowCDart) + [!IsEmpty(ListItem.Thumb) + !Substring(ListItem.Thumb,Default,left)]</visible>
				</control>
				<control type="image">
					<right>47</right>
					<posy>-5</posy>
					<width>495</width>
					<height>725</height>
					<aspectratio align="right" aligny="center" scalediffuse="true">keep</aspectratio>
					<texture background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png" border="5">$VAR[PosterThumb]</texture>
					<bordersize>20</bordersize>
				</control>
				
				<control type="group">
					<right>67</right>
					<posy>15</posy>
					<visible>Skin.HasSetting(View51_ShowCDart)</visible>
					<include>WatchedIndicatorLarge</include>
				</control>

				
			</control>
			
			<!--vertical Scollbar-->
			<control type="scrollbar" id="60">
				<visible>Control.IsVisible(51)</visible>
				<right>15</right>
				<posy>15</posy>
				<height>685</height>
				<onup>60</onup>
				<ondown>60</ondown>
				<onleft>510</onleft>
				<animation effect="fade" start="0" end="100" time="400" condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
			</control>
    

		</control>
		
	</include>

</includes>