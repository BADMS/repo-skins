<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>

	<include name="WatchedImageSizeNormalLargePoster">
        <right>22</right>
        <top>21</top>
        <width>100</width>
        <height>100</height>
    </include>
	<include name="WatchedImageSizeClassicLargePoster">
        <right>35</right>
        <top>35</top>
        <width>80</width>
        <height>80</height>
    </include>
	<include name="WatchedLabelNormalLargePoster">
        <include condition="!SubString(System.BuildVersion,14,left) + !SubString(System.BuildVersion,15,left)">WatchedLabelNormalLargePosterPosGotham</include>
		<include condition="SubString(System.BuildVersion,14,left) | SubString(System.BuildVersion,15,left)">WatchedLabelNormalLargePosterPosHelix</include>
        <posy>20</posy>
        <width>60</width>
        <height>40</height>
        <font>Reg30</font>
    </include>
	<include name="WatchedLabelClassicLargePoster">
        <include condition="!SubString(System.BuildVersion,14,left) + !SubString(System.BuildVersion,15,left)">WatchedLabelClassicLargePosterPosGotham</include>
		<include condition="SubString(System.BuildVersion,14,left) | SubString(System.BuildVersion,15,left)">WatchedLabelClassicLargePosterPosHelix</include>
        <posy>40</posy>
        <width>60</width>
        <height>60</height>
        <font>Reg30</font>
    </include>


    <include name="View_58_LargePoster">
        <!--Panel-->
        <control type="group">
            <visible>Control.IsVisible(58)</visible>
            <include>animation_view_change</include>
            
			
			<control type="image">
                <visible>!IsEmpty(ListItem.Label)</visible>
                <posx>0</posx>
                <posy>720</posy>
                <width>1920</width>
                <height>265</height>
                <texture>colors/color_white.png</texture>
				<animation effect="fade" reversible="false" end="80" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),80)">Conditional</animation>
				<animation effect="fade" reversible="false" end="60" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),60)">Conditional</animation>
				<animation effect="fade" reversible="false" end="40" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),40)">Conditional</animation>
				<animation effect="fade" reversible="false" end="20" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),20)">Conditional</animation>
				<animation effect="fade" reversible="false" end="0" time="0" condition="StringCompare(Skin.String(ViewDetailsPanelOpacity),0)">Conditional</animation>
				<colordiffuse>$VAR[panel_color]</colordiffuse>
				<visible>Skin.HasSetting(FanArtViewShowInfo)</visible>
				<visible>!skin.hastheme(classic)</visible>
            </control>
			<include condition="skin.hastheme(classic)">ClassicDetailsPanel1</include>
					
			<!--Info-->
			<control type="grouplist">
				<animation effect="slide" end="-20,0" time="0" condition="!skin.hastheme(classic)">Conditional</animation>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<posx>80</posx>
				<posy>730</posy>
				<control type="label">
					<height>33</height>
					<width>1100</width>
					<font>Bold30</font>
					<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsFocusShadowColor)]</shadowcolor>
					<label>[UPPERCASE]$VAR[mediatitle][/UPPERCASE]</label>
				</control>
					<control type="label">
					  <height>40</height>
					  <width>1100</width>
					  <font>Reg31</font>
					  <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					  <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					  <label>$VAR[Details]</label>
				</control>
			   
				<control type="textbox">
					<posx>0</posx>
					<posy>0</posy>
					<width>1280</width>
					<height>155</height>
					<label>$VAR[Plots]</label>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<align>justify</align>
					<font>Light32</font>
					<visible>IsEmpty(Container.ListItem.Art(discart)) | !Skin.HasSetting(View58_ShowCDart)</visible>
				</control>
				<control type="textbox">
					<posx>0</posx>
					<posy>0</posy>
					<width>1100</width>
					<height>155</height>
					<label>$VAR[Plots]</label>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<align>justify</align>
					<font>Light32</font>
					<visible>!IsEmpty(Container.ListItem.Art(discart)) + Skin.HasSetting(View58_ShowCDart)</visible>
				</control>
			
			</control>
			
			<!-- ID="58" -->
			<control type="panel" id="58">
				<posx>1357</posx>
				<posy>120</posy>
				<width>520</width>
				<height>1000</height>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onleft>58</onleft>
				<onright>58</onright>
				<viewtype label="Large Poster">biglist</viewtype>
				<scrolltime tween="Cubic" easing="inout">500</scrolltime>
				<focusposition>0</focusposition>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="12,0" time="0" condition="skin.hastheme(classic)">Conditional</animation>
				<visible>!container.content(episodes)</visible>
				<itemlayout height="1000" width="520">
					<control type="group">
						<posy>200</posy>
						<control type="image">
							<!--Poster-->
							<width>520</width>
							<height>746</height>
							<bordertexture border="20" colordiffuse="black">thumb_shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<texture background="true" diffuse="poster_matte.png" fallback="poster_default.png">$VAR[PosterThumb]</texture>
							<aspectratio align="center" aligny="center">stretch</aspectratio>
						</control>
						<control type="image">
							<!--Watched Overlay-->
							<include condition="Skin.HasTheme(classic)">WatchedImageSizeClassicLargePoster</include>
							<include condition="!Skin.HasTheme(classic)">WatchedImageSizeNormalLargePoster</include>
							<colordiffuse>ccFFFFFF</colordiffuse>
							<texture>$VAR[WatchedImage]</texture>
							<visible>!Skin.HasSetting(HideWatchedOverlayLargePoster)</visible>
						</control>
						<control type="label">
							<!--watched label-->
							<include condition="!Skin.HasTheme(classic)">WatchedLabelNormalLargePoster</include>
							 <include condition="Skin.HasTheme(classic)">WatchedLabelClassicLargePoster</include>
							<align>center</align>
							<label>$VAR[WatchedLabel]</label>
							<textcolor>white</textcolor>
							<visible>!Skin.HasSetting(HideWatchedOverlayLargePoster)</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="1000" width="520">
					<control type="group">
						<posy>200</posy>
						<control type="image">
							<!--cdart image-->
							<width>520</width>
							<height>746</height>
							<bordersize>20</bordersize>
							<posy>0</posy>
							<posx>0</posx>
							<texture background="true">$INFO[ListItem.Art(discart)]</texture>
							<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
							<animation effect="slide" start="0" end="-210" tween="cubic" easing="inout" time="1200" delay="1800">Focus</animation>
							<animation effect="fade" start="0" end="100" delay="1200" time="800" pulse="false">Focus</animation>
							<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="Skin.HasSetting(AnimateDiscArt)">Conditional</animation>
							<visible>Skin.HasSetting(View58_ShowCDart)</visible>
						</control>
						<control type="image">
							<!--Poster-->
							<width>520</width>
							<height>746</height>
							<bordertexture border="20" colordiffuse="black">thumb_shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<texture background="true" diffuse="poster_matte.png" fallback="poster_default.png">$VAR[PosterThumb]</texture>
							<aspectratio align="center" aligny="center">stretch</aspectratio>
						</control>
						<control type="image">
							<!--Watched Overlay-->
							<include condition="Skin.HasTheme(classic)">WatchedImageSizeClassicLargePoster</include>
							<include condition="!Skin.HasTheme(classic)">WatchedImageSizeNormalLargePoster</include>
							<colordiffuse>ccFFFFFF</colordiffuse>
							<texture>$VAR[WatchedImage]</texture>
							<visible>!Skin.HasSetting(HideWatchedOverlayLargePoster)</visible>
						</control>
						<control type="label">
							<!--watched label-->
							<include condition="!Skin.HasTheme(classic)">WatchedLabelNormalLargePoster</include>
							 <include condition="Skin.HasTheme(classic)">WatchedLabelClassicLargePoster</include>
							<align>center</align>
							<label>$VAR[WatchedLabel]</label>
							<textcolor>white</textcolor>
							<visible>!Skin.HasSetting(HideWatchedOverlayLargePoster)</visible>
						</control>
					</control>
					
				</focusedlayout>
			</control>

			
			
        </control>

	</include>
</includes>